{"version":3,"file":"static/js/monaco-editor-vendor.d262a4b1.01ca6624.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/nls.js","../../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../../node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../../node_modules/monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js","../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionList.js","../../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionWidget.js","../../node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../../node_modules/monaco-editor/esm/vs/platform/action/common/action.js","../../node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","../../node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../../node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../../node_modules/monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js","../../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js","../../node_modules/monaco-editor/esm/vs/platform/dialogs/common/dialogs.js","../../node_modules/monaco-editor/esm/vs/platform/dnd/browser/dnd.js","../../node_modules/monaco-editor/esm/vs/platform/editor/common/editor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nfunction getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n        const res = yield fetch(url);\n        if (res.ok) {\n            const messages = yield res.json();\n            return messages;\n        }\n        throw new Error(`${res.status} - ${res.statusText}`);\n    });\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        // TODO: We need to give back the mangled names here\n        return load({\n            localize: localize,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (() => __awaiter(this, void 0, void 0, function* () {\n            var _b;\n            try {\n                const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = yield getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_b = pluginConfig.availableLanguages) !== null && _b !== void 0 ? _b : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        }))();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _layoutService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._layoutService = _layoutService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* AccessibilitySupport.Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._onDidChangeReducedMotion = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n            if (e.affectsConfiguration('workbench.reduceMotion')) {\n                this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        updateContextKey();\n        this._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n        const reduceMotionMatcher = window.matchMedia(`(prefers-reduced-motion: reduce)`);\n        this._systemMotionReduced = reduceMotionMatcher.matches;\n        this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n        this.initReducedMotionListeners(reduceMotionMatcher);\n    }\n    initReducedMotionListeners(reduceMotionMatcher) {\n        if (!this._layoutService.hasContainer) {\n            // we can't use `ILayoutService.container` because the application\n            // doesn't have a single container\n            return;\n        }\n        this._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n            this._systemMotionReduced = reduceMotionMatcher.matches;\n            if (this._configMotionReduced === 'auto') {\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        const updateRootClasses = () => {\n            const reduce = this.isMotionReduced();\n            this._layoutService.container.classList.toggle('reduce-motion', reduce);\n            this._layoutService.container.classList.toggle('enable-motion', !reduce);\n        };\n        updateRootClasses();\n        this._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */);\n    }\n    get onDidChangeReducedMotion() {\n        return this._onDidChangeReducedMotion.event;\n    }\n    isMotionReduced() {\n        const config = this._configMotionReduced;\n        return config === 'on' || (config === 'auto' && this._systemMotionReduced);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ILayoutService),\n    __param(2, IConfigurationService)\n], AccessibilityService);\nexport { AccessibilityService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nexport const Categories = Object.freeze({\n    View: { value: localize('view', \"View\"), original: 'View' },\n    Help: { value: localize('help', \"Help\"), original: 'Help' },\n    Test: { value: localize('test', \"Test\"), original: 'Test' },\n    File: { value: localize('file', \"File\"), original: 'File' },\n    Preferences: { value: localize('preferences', \"Preferences\"), original: 'Preferences' },\n    Developer: { value: localize({ key: 'developer', comment: ['A developer on Code itself or someone diagnosing issues in Code'] }, \"Developer\"), original: 'Developer' }\n});\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { defaultListStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable } from '../../theme/common/colorRegistry.js';\nexport const acceptSelectedActionCommand = 'acceptSelectedCodeAction';\nexport const previewSelectedActionCommand = 'previewSelectedCodeAction';\nclass HeaderRenderer {\n    get templateId() { return \"header\" /* ActionListItemKind.Header */; }\n    renderTemplate(container) {\n        container.classList.add('group-header');\n        const text = document.createElement('span');\n        container.append(text);\n        return { container, text };\n    }\n    renderElement(element, _index, templateData) {\n        var _a, _b;\n        templateData.text.textContent = (_b = (_a = element.group) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '';\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nlet ActionItemRenderer = class ActionItemRenderer {\n    get templateId() { return \"action\" /* ActionListItemKind.Action */; }\n    constructor(_supportsPreview, _keybindingService) {\n        this._supportsPreview = _supportsPreview;\n        this._keybindingService = _keybindingService;\n    }\n    renderTemplate(container) {\n        container.classList.add(this.templateId);\n        const icon = document.createElement('div');\n        icon.className = 'icon';\n        container.append(icon);\n        const text = document.createElement('span');\n        text.className = 'title';\n        container.append(text);\n        const keybinding = new KeybindingLabel(container, OS);\n        return { container, icon, text, keybinding };\n    }\n    renderElement(element, _index, data) {\n        var _a, _b, _c;\n        if ((_a = element.group) === null || _a === void 0 ? void 0 : _a.icon) {\n            data.icon.className = ThemeIcon.asClassName(element.group.icon);\n            if (element.group.icon.color) {\n                data.icon.style.color = asCssVariable(element.group.icon.color.id);\n            }\n        }\n        else {\n            data.icon.className = ThemeIcon.asClassName(Codicon.lightBulb);\n            data.icon.style.color = 'var(--vscode-editorLightBulb-foreground)';\n        }\n        if (!element.item || !element.label) {\n            return;\n        }\n        data.text.textContent = stripNewlines(element.label);\n        data.keybinding.set(element.keybinding);\n        dom.setVisibility(!!element.keybinding, data.keybinding.element);\n        const actionTitle = (_b = this._keybindingService.lookupKeybinding(acceptSelectedActionCommand)) === null || _b === void 0 ? void 0 : _b.getLabel();\n        const previewTitle = (_c = this._keybindingService.lookupKeybinding(previewSelectedActionCommand)) === null || _c === void 0 ? void 0 : _c.getLabel();\n        data.container.classList.toggle('option-disabled', element.disabled);\n        if (element.disabled) {\n            data.container.title = element.label;\n        }\n        else if (actionTitle && previewTitle) {\n            if (this._supportsPreview && element.canPreview) {\n                data.container.title = localize({ key: 'label-preview', comment: ['placeholders are keybindings, e.g \"F2 to apply, Shift+F2 to preview\"'] }, \"{0} to apply, {1} to preview\", actionTitle, previewTitle);\n            }\n            else {\n                data.container.title = localize({ key: 'label', comment: ['placeholder is a keybinding, e.g \"F2 to apply\"'] }, \"{0} to apply\", actionTitle);\n            }\n        }\n        else {\n            data.container.title = '';\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n};\nActionItemRenderer = __decorate([\n    __param(1, IKeybindingService)\n], ActionItemRenderer);\nclass AcceptSelectedEvent extends UIEvent {\n    constructor() { super('acceptSelectedAction'); }\n}\nclass PreviewSelectedEvent extends UIEvent {\n    constructor() { super('previewSelectedAction'); }\n}\nfunction getKeyboardNavigationLabel(item) {\n    // Filter out header vs. action\n    if (item.kind === 'action') {\n        return item.label;\n    }\n    return undefined;\n}\nlet ActionList = class ActionList extends Disposable {\n    constructor(user, preview, items, _delegate, _contextViewService, _keybindingService) {\n        super();\n        this._delegate = _delegate;\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._actionLineHeight = 24;\n        this._headerLineHeight = 26;\n        this.cts = this._register(new CancellationTokenSource());\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('actionList');\n        const virtualDelegate = {\n            getHeight: element => element.kind === \"header\" /* ActionListItemKind.Header */ ? this._headerLineHeight : this._actionLineHeight,\n            getTemplateId: element => element.kind\n        };\n        this._list = this._register(new List(user, this.domNode, virtualDelegate, [\n            new ActionItemRenderer(preview, this._keybindingService),\n            new HeaderRenderer(),\n        ], {\n            keyboardSupport: false,\n            typeNavigationEnabled: true,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel },\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    if (element.kind === \"action\" /* ActionListItemKind.Action */) {\n                        let label = element.label ? stripNewlines(element === null || element === void 0 ? void 0 : element.label) : '';\n                        if (element.disabled) {\n                            label = localize({ key: 'customQuickFixWidget.labels', comment: [`Action widget labels for accessibility.`] }, \"{0}, Disabled Reason: {1}\", label, element.disabled);\n                        }\n                        return label;\n                    }\n                    return null;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'customQuickFixWidget', comment: [`An action widget option`] }, \"Action Widget\"),\n                getRole: (e) => e.kind === \"action\" /* ActionListItemKind.Action */ ? 'option' : 'separator',\n                getWidgetRole: () => 'listbox',\n            },\n        }));\n        this._list.style(defaultListStyles);\n        this._register(this._list.onMouseClick(e => this.onListClick(e)));\n        this._register(this._list.onMouseOver(e => this.onListHover(e)));\n        this._register(this._list.onDidChangeFocus(() => this.onFocus()));\n        this._register(this._list.onDidChangeSelection(e => this.onListSelection(e)));\n        this._allMenuItems = items;\n        this._list.splice(0, this._list.length, this._allMenuItems);\n        if (this._list.length) {\n            this.focusNext();\n        }\n    }\n    focusCondition(element) {\n        return !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */;\n    }\n    hide(didCancel) {\n        this._delegate.onHide(didCancel);\n        this.cts.cancel();\n        this._contextViewService.hideContextView();\n    }\n    layout(minWidth) {\n        // Updating list height, depending on how many separators and headers there are.\n        const numHeaders = this._allMenuItems.filter(item => item.kind === 'header').length;\n        const itemsHeight = this._allMenuItems.length * this._actionLineHeight;\n        const heightWithHeaders = itemsHeight + numHeaders * this._headerLineHeight - numHeaders * this._actionLineHeight;\n        this._list.layout(heightWithHeaders);\n        // For finding width dynamically (not using resize observer)\n        const itemWidths = this._allMenuItems.map((_, index) => {\n            const element = document.getElementById(this._list.getElementID(index));\n            if (element) {\n                element.style.width = 'auto';\n                const width = element.getBoundingClientRect().width;\n                element.style.width = '';\n                return width;\n            }\n            return 0;\n        });\n        // resize observer - can be used in the future since list widget supports dynamic height but not width\n        const width = Math.max(...itemWidths, minWidth);\n        const maxVhPrecentage = 0.7;\n        const height = Math.min(heightWithHeaders, document.body.clientHeight * maxVhPrecentage);\n        this._list.layout(height, width);\n        this.domNode.style.height = `${height}px`;\n        this._list.domFocus();\n        return width;\n    }\n    focusPrevious() {\n        this._list.focusPrevious(1, true, undefined, this.focusCondition);\n    }\n    focusNext() {\n        this._list.focusNext(1, true, undefined, this.focusCondition);\n    }\n    acceptSelected(preview) {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        if (!this.focusCondition(element)) {\n            return;\n        }\n        const event = preview ? new PreviewSelectedEvent() : new AcceptSelectedEvent();\n        this._list.setSelection([focusIndex], event);\n    }\n    onListSelection(e) {\n        if (!e.elements.length) {\n            return;\n        }\n        const element = e.elements[0];\n        if (element.item && this.focusCondition(element)) {\n            this._delegate.onSelect(element.item, e.browserEvent instanceof PreviewSelectedEvent);\n        }\n        else {\n            this._list.setSelection([]);\n        }\n    }\n    onFocus() {\n        var _a, _b;\n        this._list.domFocus();\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        (_b = (_a = this._delegate).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, element.item);\n    }\n    onListHover(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const element = e.element;\n            if (element && element.item && this.focusCondition(element)) {\n                if (this._delegate.onHover && !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */) {\n                    const result = yield this._delegate.onHover(element.item, this.cts.token);\n                    element.canPreview = result ? result.canPreview : undefined;\n                }\n                if (e.index) {\n                    this._list.splice(e.index, 1, [element]);\n                }\n            }\n            this._list.setFocus(typeof e.index === 'number' ? [e.index] : []);\n        });\n    }\n    onListClick(e) {\n        if (e.element && this.focusCondition(e.element)) {\n            this._list.setFocus([]);\n        }\n    }\n};\nActionList = __decorate([\n    __param(4, IContextViewService),\n    __param(5, IKeybindingService)\n], ActionList);\nexport { ActionList };\nfunction stripNewlines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { acceptSelectedActionCommand, ActionList, previewSelectedActionCommand } from './actionList.js';\nimport { Action2, registerAction2 } from '../../actions/common/actions.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { inputActiveOptionBackground, registerColor } from '../../theme/common/colorRegistry.js';\nregisterColor('actionBar.toggledBackground', { dark: inputActiveOptionBackground, light: inputActiveOptionBackground, hcDark: inputActiveOptionBackground, hcLight: inputActiveOptionBackground, }, localize('actionBar.toggledBackground', 'Background color for toggled action items in action bar.'));\nconst ActionWidgetContextKeys = {\n    Visible: new RawContextKey('codeActionMenuVisible', false, localize('codeActionMenuVisible', \"Whether the action widget list is visible\"))\n};\nexport const IActionWidgetService = createDecorator('actionWidgetService');\nlet ActionWidgetService = class ActionWidgetService extends Disposable {\n    get isVisible() {\n        return ActionWidgetContextKeys.Visible.getValue(this._contextKeyService) || false;\n    }\n    constructor(_contextViewService, _contextKeyService, _instantiationService) {\n        super();\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._list = this._register(new MutableDisposable());\n    }\n    show(user, supportsPreview, items, delegate, anchor, container, actionBarActions) {\n        const visibleContext = ActionWidgetContextKeys.Visible.bindTo(this._contextKeyService);\n        const list = this._instantiationService.createInstance(ActionList, user, supportsPreview, items, delegate);\n        this._contextViewService.showContextView({\n            getAnchor: () => anchor,\n            render: (container) => {\n                visibleContext.set(true);\n                return this._renderWidget(container, list, actionBarActions !== null && actionBarActions !== void 0 ? actionBarActions : []);\n            },\n            onHide: (didCancel) => {\n                visibleContext.reset();\n                this._onWidgetClosed(didCancel);\n            },\n        }, container, false);\n    }\n    acceptSelected(preview) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.acceptSelected(preview);\n    }\n    focusPrevious() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusPrevious();\n    }\n    focusNext() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusNext();\n    }\n    hide() {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide();\n        this._list.clear();\n    }\n    _renderWidget(element, list, actionBarActions) {\n        var _a;\n        const widget = document.createElement('div');\n        widget.classList.add('action-widget');\n        element.appendChild(widget);\n        this._list.value = list;\n        if (this._list.value) {\n            widget.appendChild(this._list.value.domNode);\n        }\n        else {\n            throw new Error('List has no value');\n        }\n        const renderDisposables = new DisposableStore();\n        // Invisible div to block mouse interaction in the rest of the UI\n        const menuBlock = document.createElement('div');\n        const block = element.appendChild(menuBlock);\n        block.classList.add('context-view-block');\n        renderDisposables.add(dom.addDisposableListener(block, dom.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n        // Invisible div to block mouse interaction with the menu\n        const pointerBlockDiv = document.createElement('div');\n        const pointerBlock = element.appendChild(pointerBlockDiv);\n        pointerBlock.classList.add('context-view-pointerBlock');\n        // Removes block on click INSIDE widget or ANY mouse movement\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.POINTER_MOVE, () => pointerBlock.remove()));\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.MOUSE_DOWN, () => pointerBlock.remove()));\n        // Action bar\n        let actionBarWidth = 0;\n        if (actionBarActions.length) {\n            const actionBar = this._createActionBar('.action-widget-action-bar', actionBarActions);\n            if (actionBar) {\n                widget.appendChild(actionBar.getContainer().parentElement);\n                renderDisposables.add(actionBar);\n                actionBarWidth = actionBar.getContainer().offsetWidth;\n            }\n        }\n        const width = (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.layout(actionBarWidth);\n        widget.style.width = `${width}px`;\n        const focusTracker = renderDisposables.add(dom.trackFocus(element));\n        renderDisposables.add(focusTracker.onDidBlur(() => this.hide()));\n        return renderDisposables;\n    }\n    _createActionBar(className, actions) {\n        if (!actions.length) {\n            return undefined;\n        }\n        const container = dom.$(className);\n        const actionBar = new ActionBar(container);\n        actionBar.push(actions, { icon: false, label: true });\n        return actionBar;\n    }\n    _onWidgetClosed(didCancel) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide(didCancel);\n    }\n};\nActionWidgetService = __decorate([\n    __param(0, IContextViewService),\n    __param(1, IContextKeyService),\n    __param(2, IInstantiationService)\n], ActionWidgetService);\nregisterSingleton(IActionWidgetService, ActionWidgetService, 1 /* InstantiationType.Delayed */);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 1000;\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'hideCodeActionWidget',\n            title: {\n                value: localize('hideCodeActionWidget.title', \"Hide action widget\"),\n                original: 'Hide action widget'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */,\n                secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n            },\n        });\n    }\n    run(accessor) {\n        accessor.get(IActionWidgetService).hide();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectPrevCodeAction',\n            title: {\n                value: localize('selectPrevCodeAction.title', \"Select previous action\"),\n                original: 'Select previous action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] },\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusPrevious();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectNextCodeAction',\n            title: {\n                value: localize('selectNextCodeAction.title', \"Select next action\"),\n                original: 'Select next action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusNext();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: acceptSelectedActionCommand,\n            title: {\n                value: localize('acceptSelected.title', \"Accept selected action\"),\n                original: 'Accept selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */],\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: previewSelectedActionCommand,\n            title: {\n                value: localize('previewSelected.title', \"Preview selected action\"),\n                original: 'Preview selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected(true);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend, reset } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n    const groups = menu.getActions(options);\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable, keybinding: options === null || options === void 0 ? void 0 : options.keybinding, hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    onClick(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            event.preventDefault();\n            event.stopPropagation();\n            try {\n                yield this.actionRunner.run(this._commandAction, this._context);\n            }\n            catch (err) {\n                this._notificationService.error(err);\n            }\n        });\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                var _a;\n                const wantsAltCommand = !!((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled) &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        var _a;\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url - add special element with SVG-mask and icon color background\n            const svgUrl = isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light);\n            const svgIcon = $('span');\n            svgIcon.style.webkitMask = svgIcon.style.mask = `${svgUrl} no-repeat 50% 50%`;\n            svgIcon.style.background = 'var(--vscode-icon-foreground)';\n            svgIcon.style.display = 'inline-block';\n            svgIcon.style.width = '100%';\n            svgIcon.style.height = '100%';\n            label.appendChild(svgIcon);\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.classList.remove('icon');\n                reset(label);\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        var _a, _b, _c;\n        const dropdownOptions = Object.assign(Object.assign({}, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined), keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : (action => _keybindingService.lookupKeybinding(action.id)) });\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = Object.assign(Object.assign({ keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id) }, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'], actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner() });\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        });\n    }\n    update(lastAction) {\n        var _a;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            runAction(action, context) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield action.run(undefined);\n                });\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        var _a;\n        let defaultActionKeybinding;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, Object.assign(Object.assign({}, options), { persistLastActionId: true }));\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isICommandActionToggleInfo(thing) {\n    return thing ? thing.condition !== undefined : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, keybindingService, telemetryService) {\n        super(container, _contextMenuService, Object.assign(Object.assign({ \n            // defaults\n            getKeyBinding: (action) => { var _a; return (_a = keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined; } }, _options), { \n            // mandatory (overide options)\n            allowContextMenu: true, skipTelemetry: typeof (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) === 'string' }));\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options === null || _options === void 0 ? void 0 : _options.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        var _a, _b, _c;\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.overflowBehavior) !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a === null || a === void 0 ? void 0 : a.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle actions\n        if (toggleActions.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                var _a, _b, _c, _d, _e;\n                const event = new StandardMouseEvent(e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                let noHide = false;\n                // last item cannot be hidden when using ignore strategy\n                if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n                    noHide = true;\n                    for (let i = 0; i < toggleActions.length; i++) {\n                        if (toggleActions[i].checked) {\n                            toggleActions[i] = toAction({\n                                id: action.id,\n                                label: action.label,\n                                checked: true,\n                                enabled: false,\n                                run() { }\n                            });\n                            break; // there is only one\n                        }\n                    }\n                }\n                // add \"hide foo\" actions\n                let hideAction;\n                if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                    if (!action.hideActions) {\n                        // no context menu for MenuItemAction instances that support no hiding\n                        // those are fake actions and need to be cleaned up\n                        return;\n                    }\n                    hideAction = action.hideActions.hide;\n                }\n                else {\n                    hideAction = toAction({\n                        id: 'label',\n                        label: localize('hide', \"Hide\"),\n                        enabled: false,\n                        run() { }\n                    });\n                }\n                const actions = Separator.join([hideAction], toggleActions);\n                // add \"Reset Menu\" action\n                if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n                    menuActionOptions: Object.assign({ renderShortTitle: true }, (_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions),\n                    skipTelemetry: typeof ((_e = this._options) === null || _e === void 0 ? void 0 : _e.telemetrySource) === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContent = new MenuId('EditorContent');\nMenuId.EditorLineNumberContext = new MenuId('EditorLineNumberContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EditorTitleContextShare = new MenuId('EditorTitleContextShare');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.EditorTabsBarContext = new MenuId('EditorTabsBarContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExplorerContextShare = new MenuId('ExplorerContextShare');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.CommandCenterCenter = new MenuId('CommandCenterCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\nMenuId.PanelPositionMenu = new MenuId('PanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceContextShare = new MenuId('SCMResourceContextShare');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.SearchActionMenu = new MenuId('SearchActionContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.StickyScrollContext = new MenuId('StickyScrollContext');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestMessageContext = new MenuId('TestMessageContext');\nMenuId.TestMessageContent = new MenuId('TestMessageContent');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentEditorActions = new MenuId('CommentEditorActions');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\nMenuId.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\nMenuId.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nMenuId.MergeBaseToolbar = new MenuId('MergeBaseToolbar');\nMenuId.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\nMenuId.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\nMenuId.ChatContext = new MenuId('ChatContext');\nMenuId.ChatCodeBlock = new MenuId('ChatCodeblock');\nMenuId.ChatMessageTitle = new MenuId('ChatMessageTitle');\nMenuId.ChatExecute = new MenuId('ChatExecute');\nMenuId.ChatInputSide = new MenuId('ChatInputSide');\nMenuId.AccessibleView = new MenuId('AccessibleView');\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nMenuRegistryChangeEvent._all = new Map();\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return (options === null || options === void 0 ? void 0 : options.renderShortTitle) && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, contextKeyService, _commandService) {\n        var _a, _b;\n        this.hideActions = hideActions;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = new DisposableStore();\n    const action = new ctor();\n    const _a = action.desc, { f1, menu, keybinding, description } = _a, command = __rest(_a, [\"f1\", \"menu\", \"keybinding\", \"description\"]);\n    // command\n    disposables.add(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        description: description,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.add(MenuRegistry.appendMenuItem(item.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: item.precondition === null ? undefined : command.precondition }) }, item)));\n        }\n    }\n    else if (menu) {\n        disposables.add(MenuRegistry.appendMenuItem(menu.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: menu.precondition === null ? undefined : command.precondition }) }, menu)));\n    }\n    if (f1) {\n        disposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.add(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, item), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when })));\n        }\n    }\n    else if (keybinding) {\n        disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, keybinding), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when })));\n    }\n    return disposables;\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, storageService) {\n        this._commandService = _commandService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, Object.assign({ emitEventsForSubmenuChanges: false, eventDebounceDelay: 50 }, options), this._commandService, contextKeyService);\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = PersistedMenuHideState_1 = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        var _a;\n        return (_a = this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`)) !== null && _a !== void 0 ? _a : false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet MenuInfo = MenuInfo_1 = class MenuInfo {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _contextKeyService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuGroups = [];\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(MenuInfo_1._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        MenuInfo_1._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfo_1._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfo_1._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nexport const IAudioCueService = createDecorator('audioCue');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nSound.error = Sound.register({ fileName: 'error.mp3' });\nSound.warning = Sound.register({ fileName: 'warning.mp3' });\nSound.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\nSound.break = Sound.register({ fileName: 'break.mp3' });\nSound.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\nSound.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\nSound.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\nSound.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\nSound.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\nSound.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\nSound.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\nSound.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' });\nSound.chatResponsePending = Sound.register({ fileName: 'chatResponsePending.mp3' });\nSound.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' });\nSound.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' });\nSound.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' });\nSound.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' });\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AudioCue {\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const audioCue = new AudioCue(soundSource, options.name, options.settingsKey);\n        AudioCue._audioCues.add(audioCue);\n        return audioCue;\n    }\n    constructor(sound, name, settingsKey) {\n        this.sound = sound;\n        this.name = name;\n        this.settingsKey = settingsKey;\n    }\n}\nAudioCue._audioCues = new Set();\nAudioCue.error = AudioCue.register({\n    name: localize('audioCues.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.lineHasError',\n});\nAudioCue.warning = AudioCue.register({\n    name: localize('audioCues.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    settingsKey: 'audioCues.lineHasWarning',\n});\nAudioCue.foldedArea = AudioCue.register({\n    name: localize('audioCues.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    settingsKey: 'audioCues.lineHasFoldedArea',\n});\nAudioCue.break = AudioCue.register({\n    name: localize('audioCues.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.lineHasBreakpoint',\n});\nAudioCue.inlineSuggestion = AudioCue.register({\n    name: localize('audioCues.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.lineHasInlineSuggestion',\n});\nAudioCue.terminalQuickFix = AudioCue.register({\n    name: localize('audioCues.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.terminalQuickFix',\n});\nAudioCue.onDebugBreak = AudioCue.register({\n    name: localize('audioCues.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.onDebugBreak',\n});\nAudioCue.noInlayHints = AudioCue.register({\n    name: localize('audioCues.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.noInlayHints'\n});\nAudioCue.taskCompleted = AudioCue.register({\n    name: localize('audioCues.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.taskCompleted'\n});\nAudioCue.taskFailed = AudioCue.register({\n    name: localize('audioCues.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.taskFailed'\n});\nAudioCue.terminalCommandFailed = AudioCue.register({\n    name: localize('audioCues.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.terminalCommandFailed'\n});\nAudioCue.terminalBell = AudioCue.register({\n    name: localize('audioCues.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    settingsKey: 'audioCues.terminalBell'\n});\nAudioCue.notebookCellCompleted = AudioCue.register({\n    name: localize('audioCues.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.notebookCellCompleted'\n});\nAudioCue.notebookCellFailed = AudioCue.register({\n    name: localize('audioCues.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.notebookCellFailed'\n});\nAudioCue.diffLineInserted = AudioCue.register({\n    name: localize('audioCues.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    settingsKey: 'audioCues.diffLineInserted'\n});\nAudioCue.diffLineDeleted = AudioCue.register({\n    name: localize('audioCues.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    settingsKey: 'audioCues.diffLineDeleted'\n});\nAudioCue.diffLineModified = AudioCue.register({\n    name: localize('audioCues.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    settingsKey: 'audioCues.diffLineModified'\n});\nAudioCue.chatRequestSent = AudioCue.register({\n    name: localize('audioCues.chatRequestSent', 'Chat Request Sent'),\n    sound: Sound.chatRequestSent,\n    settingsKey: 'audioCues.chatRequestSent'\n});\nAudioCue.chatResponseReceived = AudioCue.register({\n    name: localize('audioCues.chatResponseReceived', 'Chat Response Received'),\n    settingsKey: 'audioCues.chatResponseReceived',\n    sound: {\n        randomOneOf: [\n            Sound.chatResponseReceived1,\n            Sound.chatResponseReceived2,\n            Sound.chatResponseReceived3,\n            Sound.chatResponseReceived4\n        ]\n    }\n});\nAudioCue.chatResponsePending = AudioCue.register({\n    name: localize('audioCues.chatResponsePending', 'Chat Response Pending'),\n    sound: Sound.chatResponsePending,\n    settingsKey: 'audioCues.chatResponsePending'\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = []; // unsupported in web (only in-memory)\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n    writeResources(resources) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.resources = resources;\n        });\n    }\n    readResources() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resources;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (const arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nfunction freeze(data) {\n    return Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = [], raw) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.raw = raw;\n        this.overrideConfigurations = new Map();\n    }\n    get rawConfiguration() {\n        var _a;\n        if (!this._rawConfiguration) {\n            if ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) {\n                const rawConfigurationModels = this.raw.map(raw => {\n                    if (raw instanceof ConfigurationModel) {\n                        return raw;\n                    }\n                    const parser = new ConfigurationModelParser('');\n                    parser.parseRaw(raw);\n                    return parser.configurationModel;\n                });\n                this._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n            }\n            else {\n                // raw is same as current\n                this._rawConfiguration = this;\n            }\n        }\n        return this._rawConfiguration;\n    }\n    get contents() {\n        return this._contents;\n    }\n    get overrides() {\n        return this._overrides;\n    }\n    get keys() {\n        return this._keys;\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    inspect(section, overrideIdentifier) {\n        const value = this.rawConfiguration.getValue(section);\n        const override = overrideIdentifier ? this.rawConfiguration.getOverrideValue(section, overrideIdentifier) : undefined;\n        const merged = overrideIdentifier ? this.rawConfiguration.override(overrideIdentifier).getValue(section) : value;\n        return { value, override, merged };\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        var _a, _b;\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        const raws = ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) ? [...this.raw] : [this];\n        for (const other of others) {\n            raws.push(...(((_b = other.raw) === null || _b === void 0 ? void 0 : _b.length) ? other.raw : [other]));\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws);\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (override.identifiers.length === 1 && override.identifiers[0] === identifier) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    addValue(key, value) {\n        this.updateValue(key, value, true);\n    }\n    setValue(key, value) {\n        this.updateValue(key, value, false);\n    }\n    removeValue(key) {\n        const index = this.keys.indexOf(key);\n        if (index === -1) {\n            return;\n        }\n        this.keys.splice(index, 1);\n        removeFromValueTree(this.contents, key);\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n        }\n    }\n    updateValue(key, value, add) {\n        addToValueTree(this.contents, key, value, e => console.error(e));\n        add = add || this.keys.indexOf(key) === -1;\n        if (add) {\n            this.keys.push(key);\n        }\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.push({\n                identifiers: overrideIdentifiersFromKey(key),\n                keys: Object.keys(this.contents[key]),\n                contents: toValuesTree(this.contents[key], message => console.error(message)),\n            });\n        }\n    }\n}\nexport class ConfigurationModelParser {\n    constructor(_name) {\n        this._name = _name;\n        this._raw = null;\n        this._configurationModel = null;\n        this._restrictedConfigurations = [];\n    }\n    get configurationModel() {\n        return this._configurationModel || new ConfigurationModel();\n    }\n    parseRaw(raw, options) {\n        this._raw = raw;\n        const { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n        this._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */);\n        this._restrictedConfigurations = restricted || [];\n    }\n    doParseRaw(raw, options) {\n        const configurationProperties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const filtered = this.filter(raw, configurationProperties, true, options);\n        raw = filtered.raw;\n        const contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        const keys = Object.keys(raw);\n        const overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        return { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n    }\n    filter(properties, configurationProperties, filterOverriddenProperties, options) {\n        var _a, _b, _c;\n        let hasExcludedProperties = false;\n        if (!(options === null || options === void 0 ? void 0 : options.scopes) && !(options === null || options === void 0 ? void 0 : options.skipRestricted) && !((_a = options === null || options === void 0 ? void 0 : options.exclude) === null || _a === void 0 ? void 0 : _a.length)) {\n            return { raw: properties, restricted: [], hasExcludedProperties };\n        }\n        const raw = {};\n        const restricted = [];\n        for (const key in properties) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n                const result = this.filter(properties[key], configurationProperties, false, options);\n                raw[key] = result.raw;\n                hasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n                restricted.push(...result.restricted);\n            }\n            else {\n                const propertySchema = configurationProperties[key];\n                const scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : 3 /* ConfigurationScope.WINDOW */ : undefined;\n                if (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted) {\n                    restricted.push(key);\n                }\n                if (!((_b = options.exclude) === null || _b === void 0 ? void 0 : _b.includes(key)) /* Check exclude */\n                    && (((_c = options.include) === null || _c === void 0 ? void 0 : _c.includes(key) /* Check include */)\n                        || ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) /* Check scopes */\n                            && !(options.skipRestricted && (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted))))) /* Check restricted */ {\n                    raw[key] = properties[key];\n                }\n                else {\n                    hasExcludedProperties = true;\n                }\n            }\n        }\n        return { raw, restricted, hasExcludedProperties };\n    }\n    toOverrides(raw, conflictReporter) {\n        const overrides = [];\n        for (const key of Object.keys(raw)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                const overrideRaw = {};\n                for (const keyInOverrideRaw in raw[key]) {\n                    overrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n                }\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(overrideRaw),\n                    contents: toValuesTree(overrideRaw, conflictReporter)\n                });\n            }\n        }\n        return overrides;\n    }\n}\nclass ConfigurationInspectValue {\n    constructor(key, overrides, _value, overrideIdentifiers, defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, localUserConfiguration, remoteUserConfiguration, workspaceConfiguration, folderConfigurationModel, memoryConfigurationModel) {\n        this.key = key;\n        this.overrides = overrides;\n        this._value = _value;\n        this.overrideIdentifiers = overrideIdentifiers;\n        this.defaultConfiguration = defaultConfiguration;\n        this.policyConfiguration = policyConfiguration;\n        this.applicationConfiguration = applicationConfiguration;\n        this.userConfiguration = userConfiguration;\n        this.localUserConfiguration = localUserConfiguration;\n        this.remoteUserConfiguration = remoteUserConfiguration;\n        this.workspaceConfiguration = workspaceConfiguration;\n        this.folderConfigurationModel = folderConfigurationModel;\n        this.memoryConfigurationModel = memoryConfigurationModel;\n    }\n    inspect(model, section, overrideIdentifier) {\n        const inspectValue = model.inspect(section, overrideIdentifier);\n        return {\n            get value() { return freeze(inspectValue.value); },\n            get override() { return freeze(inspectValue.override); },\n            get merged() { return freeze(inspectValue.merged); }\n        };\n    }\n    get userInspectValue() {\n        if (!this._userInspectValue) {\n            this._userInspectValue = this.inspect(this.userConfiguration, this.key, this.overrides.overrideIdentifier);\n        }\n        return this._userInspectValue;\n    }\n    get user() {\n        return this.userInspectValue.value !== undefined || this.userInspectValue.override !== undefined ? { value: this.userInspectValue.value, override: this.userInspectValue.override } : undefined;\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap()) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const overrideIdentifiers = new Set();\n        for (const override of consolidateConfigurationModel.overrides) {\n            for (const overrideIdentifier of override.identifiers) {\n                if (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n                    overrideIdentifiers.add(overrideIdentifier);\n                }\n            }\n        }\n        return new ConfigurationInspectValue(key, overrides, consolidateConfigurationModel.getValue(key), overrideIdentifiers.size ? [...overrideIdentifiers] : undefined, this._defaultConfiguration, this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration, this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration, this.userConfiguration, this.localUserConfiguration, this.remoteUserConfiguration, workspace ? this._workspaceConfiguration : undefined, folderConfigurationModel ? folderConfigurationModel : undefined, memoryConfigurationModel);\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const policyConfiguration = this.parseConfigurationModel(data.policy);\n        const applicationConfiguration = this.parseConfigurationModel(data.application);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap());\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides);\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._marker = '\\n';\n        this._markerCode1 = this._marker.charCodeAt(0);\n        this._markerCode2 = '.'.charCodeAt(0);\n        this.affectedKeys = new Set();\n        this._previousConfiguration = undefined;\n        for (const key of change.keys) {\n            this.affectedKeys.add(key);\n        }\n        for (const [, keys] of change.overrides) {\n            for (const key of keys) {\n                this.affectedKeys.add(key);\n            }\n        }\n        // Example: '\\nfoo.bar\\nabc.def\\n'\n        this._affectsConfigStr = this._marker;\n        for (const key of this.affectedKeys) {\n            this._affectsConfigStr += key + this._marker;\n        }\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        // we have one large string with all keys that have changed. we pad (marker) the section\n        // and check that either find it padded or before a segment character\n        const needle = this._marker + section;\n        const idx = this._affectsConfigStr.indexOf(needle);\n        if (idx < 0) {\n            // NOT: (marker + section)\n            return false;\n        }\n        const pos = idx + needle.length;\n        if (pos >= this._affectsConfigStr.length) {\n            return false;\n        }\n        const code = this._affectsConfigStr.charCodeAt(pos);\n        if (code !== this._markerCode1 && code !== this._markerCode2) {\n            // NOT: section + (marker | segment)\n            return false;\n        }\n        if (overrides) {\n            const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n            const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n            return !objects.equals(value1, value2);\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        var _a;\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n                    const valuesSources = (_a = configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.valuesSources) !== null && _a !== void 0 ? _a : new Map();\n                    if (source) {\n                        for (const configuration of Object.keys(overrides[key])) {\n                            valuesSources.set(configuration, source);\n                        }\n                    }\n                    const defaultValue = Object.assign(Object.assign({}, ((configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.value) || {})), overrides[key]);\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n                    const plainKey = getLanguageTagSettingPlainKey(key);\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                        defaultValueSource: source\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        var _a;\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if ((_a = properties[key].policy) === null || _a === void 0 ? void 0 : _a.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes === null || subNodes === void 0 ? void 0 : subNodes.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    var _a, _b, _c, _d;\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (((_a = schema.policy) === null || _a === void 0 ? void 0 : _a.name) && configurationRegistry.getPolicyConfigurations().get((_b = schema.policy) === null || _b === void 0 ? void 0 : _b.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, (_c = schema.policy) === null || _c === void 0 ? void 0 : _c.name, configurationRegistry.getPolicyConfigurations().get((_d = schema.policy) === null || _d === void 0 ? void 0 : _d.name));\n    }\n    return null;\n}\n","import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._configurationModel = new ConfigurationModel();\n    }\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = new ConfigurationModel();\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.addValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.addValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return Object.assign({}, this._value);\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService extends Disposable {\n    constructor(myContextId) {\n        super();\n        this._onDidChangeContext = this._register(new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) }));\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._lastContextId = 0;\n        const myContext = this._register(new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext));\n        this._contexts.set(this._myContextId, myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = this._register(new MutableDisposable());\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(this._myContextId);\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        super.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    description: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\nScanner._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\nScanner._keywords = new Map([\n    ['not', 14 /* TokenType.Not */],\n    ['in', 13 /* TokenType.In */],\n    ['false', 12 /* TokenType.False */],\n    ['true', 11 /* TokenType.True */],\n]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr === null || expr === void 0 ? void 0 : expr.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\n// Note: this doesn't produce an exact syntax tree but a normalized one\n// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\nParser._parseError = new Error();\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nContextKeyExpr._parser = new Parser({ regexParsingWithErrorRecovery: false });\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, isAncestor, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                var _a;\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a, _b, _c;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    get contextMenuHandler() {\n        if (!this._contextMenuHandler) {\n            this._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n        }\n        return this._contextMenuHandler;\n    }\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super();\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._contextMenuHandler = undefined;\n        this._onDidShowContextMenu = this._store.add(new Emitter());\n        this._onDidHideContextMenu = this._store.add(new Emitter());\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        delegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n        this.contextMenuHandler.showContextMenu(Object.assign(Object.assign({}, delegate), { onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, didCancel);\n                this._onDidHideContextMenu.fire();\n            } }));\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], ContextMenuService);\nexport { ContextMenuService };\nexport var ContextMenuMenuDelegate;\n(function (ContextMenuMenuDelegate) {\n    function is(thing) {\n        return thing && thing.menuId instanceof MenuId;\n    }\n    function transform(delegate, menuService, globalContextKeyService) {\n        if (!is(delegate)) {\n            return delegate;\n        }\n        const { menuId, menuActionOptions, contextKeyService } = delegate;\n        return Object.assign(Object.assign({}, delegate), { getActions: () => {\n                const target = [];\n                if (menuId) {\n                    const menu = menuService.createMenu(menuId, contextKeyService !== null && contextKeyService !== void 0 ? contextKeyService : globalContextKeyService);\n                    createAndFillInContextMenuActions(menu, menuActionOptions, target);\n                    menu.dispose();\n                }\n                if (!delegate.getActions) {\n                    return target;\n                }\n                else {\n                    return Separator.join(delegate.getActions(), target);\n                }\n            } });\n    }\n    ContextMenuMenuDelegate.transform = transform;\n})(ContextMenuMenuDelegate || (ContextMenuMenuDelegate = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet ContextViewService = class ContextViewService extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.currentViewDisposable = Disposable.None;\n        this.container = layoutService.hasContainer ? layoutService.container : null;\n        this.contextView = this._register(new ContextView(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayout(() => this.layout()));\n    }\n    // ContextView\n    setContainer(container, domPosition) {\n        this.contextView.setContainer(container, domPosition || 1 /* ContextViewDOMPosition.ABSOLUTE */);\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (container) {\n            if (container !== this.container || this.shadowRoot !== shadowRoot) {\n                this.container = container;\n                this.setContainer(container, shadowRoot ? 3 /* ContextViewDOMPosition.FIXED_SHADOW */ : 2 /* ContextViewDOMPosition.FIXED */);\n            }\n        }\n        else {\n            if (this.layoutService.hasContainer && this.container !== this.layoutService.container) {\n                this.container = this.layoutService.container;\n                this.setContainer(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */);\n            }\n        }\n        this.shadowRoot = shadowRoot;\n        this.contextView.show(delegate);\n        const disposable = toDisposable(() => {\n            if (this.currentViewDisposable === disposable) {\n                this.hideContextView();\n            }\n        });\n        this.currentViewDisposable = disposable;\n        return disposable;\n    }\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n    }\n};\nContextViewService = __decorate([\n    __param(0, ILayoutService)\n], ContextViewService);\nexport { ContextViewService };\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IDialogService = createDecorator('dialogService');\n","import { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nclass DragAndDropContributionRegistry {\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n//#endregion\n","export var EditorOpenSource;\n(function (EditorOpenSource) {\n    /**\n     * Default: the editor is opening via a programmatic call\n     * to the editor service API.\n     */\n    EditorOpenSource[EditorOpenSource[\"API\"] = 0] = \"API\";\n    /**\n     * Indicates that a user action triggered the opening, e.g.\n     * via mouse or keyboard use.\n     */\n    EditorOpenSource[EditorOpenSource[\"USER\"] = 1] = \"USER\";\n})(EditorOpenSource || (EditorOpenSource = {}));\n"],"names":["isPseudo","document","location","hash","indexOf","_format","message","args","result","length","replace","match","rest","index","arg","String","localize","data","_len","arguments","Array","_key","getConfiguredDefaultLocale","_","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AccessibilityService","Disposable","constructor","_contextKeyService","_layoutService","_configurationService","super","this","_accessibilitySupport","_onDidChangeScreenReaderOptimized","Emitter","_onDidChangeReducedMotion","_accessibilityModeEnabledContext","CONTEXT_ACCESSIBILITY_MODE_ENABLED","bindTo","updateContextKey","set","isScreenReaderOptimized","_register","onDidChangeConfiguration","e","affectsConfiguration","fire","_configMotionReduced","getValue","onDidChangeScreenReaderOptimized","reduceMotionMatcher","window","matchMedia","_systemMotionReduced","matches","initReducedMotionListeners","hasContainer","addDisposableListener","updateRootClasses","reduce","isMotionReduced","container","classList","toggle","onDidChangeReducedMotion","event","config","getAccessibilitySupport","IContextKeyService","ILayoutService","IConfigurationService","IAccessibilityService","createDecorator","RawContextKey","Categories","freeze","View","value","original","Help","Test","File","Preferences","Developer","comment","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","acceptSelectedActionCommand","previewSelectedActionCommand","HeaderRenderer","templateId","renderTemplate","add","text","createElement","append","renderElement","element","_index","templateData","_a","_b","textContent","group","title","disposeTemplate","_templateData","ActionItemRenderer","_supportsPreview","_keybindingService","icon","className","keybinding","KeybindingLabel","OS","_c","ThemeIcon","asClassName","color","style","asCssVariable","id","Codicon","lightBulb","item","label","stripNewlines","dom","actionTitle","lookupKeybinding","getLabel","previewTitle","disabled","canPreview","IKeybindingService","AcceptSelectedEvent","UIEvent","PreviewSelectedEvent","getKeyboardNavigationLabel","kind","ActionList","user","preview","items","_delegate","_contextViewService","_actionLineHeight","_headerLineHeight","cts","CancellationTokenSource","domNode","virtualDelegate","getHeight","getTemplateId","_list","List","keyboardSupport","typeNavigationEnabled","keyboardNavigationLabelProvider","accessibilityProvider","getAriaLabel","getWidgetAriaLabel","getRole","getWidgetRole","defaultListStyles","onMouseClick","onListClick","onMouseOver","onListHover","onDidChangeFocus","onFocus","onDidChangeSelection","onListSelection","_allMenuItems","splice","focusNext","focusCondition","hide","didCancel","onHide","cancel","hideContextView","layout","minWidth","numHeaders","filter","heightWithHeaders","itemWidths","map","getElementById","getElementID","width","getBoundingClientRect","Math","max","height","min","body","clientHeight","concat","domFocus","focusPrevious","undefined","acceptSelected","focused","getFocus","focusIndex","setSelection","elements","onSelect","browserEvent","call","onHover","token","setFocus","str","IContextViewService","registerColor","dark","inputActiveOptionBackground","light","hcDark","hcLight","ActionWidgetContextKeys","Visible","IActionWidgetService","ActionWidgetService","isVisible","_instantiationService","MutableDisposable","show","supportsPreview","delegate","anchor","actionBarActions","visibleContext","list","createInstance","showContextView","getAnchor","render","_renderWidget","reset","_onWidgetClosed","clear","widget","appendChild","Error","renderDisposables","DisposableStore","menuBlock","block","MOUSE_DOWN","stopPropagation","pointerBlockDiv","pointerBlock","POINTER_MOVE","remove","actionBarWidth","actionBar","_createActionBar","getContainer","parentElement","offsetWidth","focusTracker","onDidBlur","actions","$","ActionBar","push","IInstantiationService","registerSingleton","weight","registerAction2","Action2","precondition","primary","secondary","run","accessor","get","mac","widgetService","createAndFillInContextMenuActions","menu","options","primaryGroup","groups","getActions","modifierKeyEmitter","ModifierKeyEmitter","getInstance","fillInActions","keyStatus","altKey","isWindows","isLinux","shiftKey","actionGroup","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","useAlternativeActions","primaryBucket","secondaryBucket","isPrimaryAction","isArray","submenuInfo","Set","Separator","action","MenuItemAction","alt","newLen","SubmenuAction","submenuActions","MenuEntryActionViewItem","ActionViewItem","_notificationService","_themeService","_contextMenuService","_accessibilityService","class","draggable","hoverDelegate","_wantsAltCommand","_itemClassDispose","_altKey","_menuItemAction","_action","_commandAction","onClick","preventDefault","actionRunner","_context","err","error","_updateItemClass","isMouseOver","updateAltState","wantsAltCommand","enabled","updateLabel","updateTooltip","updateClass","getTooltip","keybindingLabel","tooltip","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","UILabelProvider","modifierLabels","checked","thing","toggled","condition","isThemeIcon","iconClasses","asClassNameArray","toDisposable","svgUrl","isDark","getColorTheme","type","asCSSUrl","svgIcon","webkitMask","mask","background","display","combinedDisposable","onDidColorThemeChange","INotificationService","IThemeService","IContextMenuService","SubmenuEntryActionViewItem","DropdownMenuActionViewItem","dropdownOptions","assign","menuAsChild","classNames","keybindingProvider","assertType","setBackgroundImage","backgroundImage","DropdownWithDefaultActionViewItem","BaseActionViewItem","submenuAction","_menuService","_instaService","_storageService","defaultAction","_container","_options","_storageKey","submenu","defaultActionId","persistLastActionId","find","a","_defaultAction","_getDefaultActionKeybindingLabel","ActionRunner","_dropdown","onDidRun","update","lastAction","store","dispose","runAction","context","prepend","defaultActionKeybinding","renderKeybindingWithDefaultActionLabel","kb","setActionContext","newContext","primaryContainer","EventType","KEY_DOWN","StandardKeyboardEvent","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","IMenuService","IStorageService","SubmenuEntrySelectActionViewItem","SelectActionViewItem","contextViewService","ID","isDisabled","defaultSelectBoxStyles","ariaLabel","optionsAsChildren","select","findIndex","borderColor","selectBorder","option","createActionViewItem","instaService","SubmenuItemAction","isSelection","rememberDefaultAction","WorkbenchToolBar","ToolBar","keybindingService","telemetryService","getKeyBinding","allowContextMenu","skipTelemetry","telemetrySource","_sessionDisposables","_store","publicLog2","from","setActions","_primary","_secondary","menuIds","slice","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","hiddenItemStrategy","hideActions","isHidden","overflowBehavior","exemptedIds","intersection","exempted","Iterable","maxItems","size","count","has","coalesceInPlace","join","getElement","_d","_e","StandardMouseEvent","getItemAction","hideAction","noHide","toAction","resetMenu","resetHiddenStates","showContextMenu","menuId","contextMenu","menuActionOptions","renderShortTitle","menuOptions","contextKeyService","ITelemetryService","MenuItemAction_1","__rest","s","t","p","prototype","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","isIMenuItem","command","isISubmenuItem","MenuId","identifier","_instances","TypeError","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","EditorContext","SimpleEditorContext","EditorContent","EditorLineNumberContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EditorTitleContextShare","EmptyEditorGroup","EmptyEditorGroupContext","EditorTabsBarContext","ExplorerContext","ExplorerContextShare","ExtensionContext","GlobalActivity","CommandCenter","CommandCenterCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","PanelAlignmentMenu","PanelPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","OpenEditorsContextShare","ProblemsPanelContext","SCMChangeContext","SCMResourceContext","SCMResourceContextShare","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMTitle","SearchContext","SearchActionMenu","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","StickyScrollContext","TestItem","TestItemGutter","TestMessageContext","TestMessageContent","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentEditorActions","CommentThreadTitle","CommentThreadActions","CommentThreadAdditionalActions","CommentThreadTitleContext","CommentThreadCommentContext","CommentTitle","CommentActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","NotebookToolbar","NotebookStickyScrollContext","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","PanelTitle","AuxiliaryBarTitle","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","WebviewContext","InlineCompletionsActions","NewFile","MergeInput1Toolbar","MergeInput2Toolbar","MergeBaseToolbar","MergeInputResultToolbar","InlineSuggestionToolbar","ChatContext","ChatCodeBlock","ChatMessageTitle","ChatExecute","ChatInputSide","AccessibleView","MenuRegistryChangeEvent","for","_all","merge","events","ids","candidate","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","MicrotaskEmitter","onDidChangeMenu","addCommand","delete","getCommand","getCommands","forEach","appendMenuItem","LinkedList","rm","appendMenuItems","getMenuItems","_appendImplicitItems","shortTitle","_commandService","contextMatchesRules","runArgs","shouldForwardArgs","executeCommand","ICommandService","ctor","disposables","f1","description","CommandsRegistry","registerCommand","handler","_len2","_key2","when","KeybindingsRegistry","registerKeybindingRule","ContextKeyExpr","and","PersistedMenuHideState_1","MenuInfo_1","MenuService","storageService","_hiddenStates","PersistedMenuHideState","createMenu","MenuImpl","emitEventsForSubmenuChanges","eventDebounceDelay","_disposables","_onDidChange","onDidChange","_ignoreChangeEvent","_hiddenByDefaultCache","raw","_data","JSON","parse","create","onDidChangeValue","console","log","_isHiddenByDefault","commandId","setDefaultState","hidden","hiddenByDefault","state","includes","updateHidden","entries","idx","removeFastWithoutKeepingOrder","_persist","menus","stringify","MenuInfo","_id","_collectContextKeysForSubmenus","_menuGroups","_structureContextKeys","_preconditionContextKeys","_toggledContextKeys","refresh","structureContextKeys","preconditionContextKeys","toggledContextKeys","menuItems","sort","_compareMenuItems","groupName","_collectContextKeys","_fillInKbExprKeys","toggledExpression","createActionGroups","activeActions","isMenuItem","isHiddenByDefault","menuHide","createMenuHide","g","exp","keys","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","aStr","bStr","hiddenStates","commandService","_menuInfo","rebuildMenuSoon","RunOnceScheduler","isStructuralChange","isEnablementChange","isToggleChange","schedule","lazyListener","DebounceEmitter","onWillAddFirstListener","startLazyListener","onDidChangeContext","affectsSome","onDidRemoveLastListener","bind","delay","states","IAudioCueService","Sound","register","fileName","warning","foldedArea","break","quickFixes","taskCompleted","taskFailed","terminalBell","diffLineInserted","diffLineDeleted","diffLineModified","chatRequestSent","chatResponsePending","chatResponseReceived1","chatResponseReceived2","chatResponseReceived3","chatResponseReceived4","SoundSource","randomOneOf","AudioCue","soundSource","sound","audioCue","name","settingsKey","_audioCues","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","notebookCellCompleted","notebookCellFailed","chatResponseReceived","BrowserClipboardService","layoutService","logService","mapTextToType","findText","resources","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","navigator","clipboard","write","ClipboardItem","catch","isRejected","writeText","complete","activeElement","textArea","position","execCommand","HTMLElement","removeChild","readText","readFindText","writeFindText","writeResources","readResources","ILogService","IClipboardService","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","constraints","constraint","actualHandler","validateConstraints","commands","removeFn","unshift","ret","isEmpty","registerCommandAlias","oldId","newId","first","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","split","last","pop","curr","obj","removeFromValueTree","valueTree","doRemoveFromValueTree","shift","getConfigurationValue","settingPath","defaultValue","path","current","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","isFrozen","objects","ConfigurationModel","_contents","_keys","_overrides","overrideConfigurations","rawConfiguration","_rawConfiguration","rawConfigurationModels","parser","ConfigurationModelParser","parseRaw","configurationModel","previous","contents","overrides","section","inspect","overrideIdentifier","override","getOverrideValue","merged","overrideContents","getContentsForOverrideIdentifer","overrideConfigurationModel","createOverrideConfigurationModel","raws","others","other","mergeContents","otherOverride","o","arrays","identifiers","every","contentsForKey","overrideContentsForKey","source","types","contentsForIdentifierOnly","contentsToMerge","toJSON","addValue","updateValue","setValue","removeValue","OVERRIDE_PROPERTY_REGEX","test","overrideIdentifiersFromKey","_name","_raw","_configurationModel","_restrictedConfigurations","restricted","hasExcludedProperties","doParseRaw","configurationProperties","Registry","as","Extensions","Configuration","getConfigurationProperties","filtered","toOverrides","filterOverriddenProperties","scopes","skipRestricted","exclude","propertySchema","scope","include","overrideRaw","keyInOverrideRaw","ConfigurationInspectValue","_value","overrideIdentifiers","defaultConfiguration","policyConfiguration","applicationConfiguration","userConfiguration","localUserConfiguration","remoteUserConfiguration","workspaceConfiguration","folderConfigurationModel","memoryConfigurationModel","model","inspectValue","userInspectValue","_userInspectValue","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidatedConfigurationModel","memoryConfiguration","resource","consolidateConfigurationModel","getFolderConfigurationModelForResource","getConsolidatedConfigurationModelForResource","_ref","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","toData","defaults","policy","application","folders","parseConfigurationModel","URI","revive","ConfigurationChangeEvent","change","currentConfiguraiton","currentWorkspace","_marker","_markerCode1","charCodeAt","_markerCode2","affectedKeys","_previousConfiguration","_affectsConfigStr","previousConfiguration","needle","pos","code","value1","value2","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","OVERRIDE_PROPERTY_PATTERN","exec","trim","distinct","configurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","registerDefaultConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","configurationDefaultOverride","valuesSources","plainKey","property","default","$ref","defaultDefaultValue","defaultValueSource","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","registerOverrideIdentifiers","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","getPolicyConfigurations","values","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","getDefaultValue","schema","DefaultConfiguration","reload","resetConfigurationModel","getConfigurationDefaultOverrides","updateConfigurationModel","defaultOverrideValue","KEYBINDING_CONTEXT_ATTR","Context","parent","_parent","NullContext","INSTANCE","ConfigAwareContextValuesContainer","emitter","_values","TernarySearchTree","forConfigKeys","_listener","allKeys","k","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","_ref2","deleteSuperstr","_keyPrefix","substr","configValue","ContextKey","service","_service","_defaultValue","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","allKeysContainedIn","CompositeContextKeyChangeEvent","evt","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","_isDisposed","_myContextId","createKey","bufferChangeEvents","callback","pause","resume","createScoped","ScopedContextKeyService","rules","getContextValuesContainer","evaluate","myContext","getContext","hasAttribute","attr","getAttribute","parseInt","NaN","findContextAttr","ContextKeyService","configurationService","_contexts","_lastContextId","contextId","createChildContext","parentContextId","disposeContext","_parentChangeListener","_updateParentChangeListener","_domNode","extraInfo","setAttribute","thisContextValues","removeAttribute","contextValue","cloneAndChange","$mid","toString","stringifyURIs","all","seen","info","hintDidYouMean","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","Scanner","_input","_start","_current","_tokens","_errors","stringRe","getLexeme","isTripleEq","lexeme","illegalState","scan","_isAtEnd","_advance","_addToken","_match","offset","_quotedString","_regex","_error","_string","expected","_peek","additional","substring","errToken","additionalInfo","lastIndex","keyword","_keywords","inEscape","inCharacterClass","ch","_regexFlags","CONSTANT_VALUES","isMacintosh","isWeb","isEdge","isFirefox","isChrome","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","Parser","_config","_scanner","_parsingErrors","_flagsGYRe","expr","_expr","peek","_parseError","_or","_and","_matchOne","right","or","_term","ContextKeyFalseExpr","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","true","false","regexLexeme","closingSlashIndex","lastIndexOf","flags","_removeFlagsGY","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","regex","serializedValue","isFalsyOrWhitespace","start","end","caseIgnoreFlag","notIn","_previous","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","replaceAll","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","deserialize","serialized","_parser","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","serialize","negated","constantValue","cmp1","cmp2","trueValue","valueKey","_negated","falseValue","withFloatOrStr","n","parseFloat","isNaN","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","_info","metaOrHide","toNegated","isEqualTo","key1","key2","implies","q","allElementsIncluded","pIndex","qIndex","IsWindowsContext","IsWebContext","InputFocusedContextKey","isIOS","isMobile","ContextMenuHandler","notificationService","focusToReturn","lastContainer","blockDisposable","blockMouse","configure","shadowRootElement","isHTMLElement","domForShadowRoot","canRelayout","anchorAlignment","anchorAxisAlignment","getMenuClassName","cursor","top","zIndex","menuDisposables","onWillRun","onActionRun","onDidActionRun","Menu","actionViewItemProvider","getActionViewItem","getActionsContext","defaultMenuStyles","onDidCancel","BLUR","defaultPrevented","rightButton","autoSelectFirstItem","getActiveElement","isAncestor","logTelemetry","isCancellationError","ContextMenuService","contextMenuHandler","_contextMenuHandler","menuService","_onDidShowContextMenu","_onDidHideContextMenu","ContextMenuMenuDelegate","transform","resetKeyStatus","globalContextKeyService","ContextViewService","currentViewDisposable","None","contextView","ContextView","onDidLayout","setContainer","domPosition","shadowRoot","disposable","getContextViewElement","getViewElement","IDialogService","CodeDataTransfers","EDITORS","FILES","LocalSelectionTransfer","hasData","proto","getData","EditorOpenSource"],"sourceRoot":""}