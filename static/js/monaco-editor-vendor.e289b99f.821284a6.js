"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[417],{44548:(u,t,e)=>{e.d(t,{N:()=>D});class D{constructor(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.length,D=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t-1;this.items=u,this.start=t,this.end=e,this.index=D}current(){return this.index===this.start-1||this.index===this.end?null:this.items[this.index]}next(){return this.index=Math.min(this.index+1,this.end),this.current()}previous(){return this.index=Math.max(this.index-1,this.start-1),this.current()}first(){return this.index=this.start,this.current()}last(){return this.index=this.end-1,this.current()}}},39107:(u,t,e)=>{e.d(t,{Ez:()=>i,ny:()=>D,zl:()=>h});var D,n=e(81530),r=e(23478),s=e(45375);!function(u){u.inMemory="inmemory",u.vscode="vscode",u.internal="private",u.walkThrough="walkThrough",u.walkThroughSnippet="walkThroughSnippet",u.http="http",u.https="https",u.file="file",u.mailto="mailto",u.untitled="untitled",u.data="data",u.command="command",u.vscodeRemote="vscode-remote",u.vscodeRemoteResource="vscode-remote-resource",u.vscodeManagedRemoteResource="vscode-managed-remote-resource",u.vscodeUserData="vscode-userdata",u.vscodeCustomEditor="vscode-custom-editor",u.vscodeNotebookCell="vscode-notebook-cell",u.vscodeNotebookCellMetadata="vscode-notebook-cell-metadata",u.vscodeNotebookCellOutput="vscode-notebook-cell-output",u.vscodeInteractiveInput="vscode-interactive-input",u.vscodeSettings="vscode-settings",u.vscodeWorkspaceTrust="vscode-workspace-trust",u.vscodeTerminal="vscode-terminal",u.vscodeChatSesssion="vscode-chat-editor",u.webviewPanel="webview-panel",u.vscodeWebview="vscode-webview",u.extension="extension",u.vscodeFileResource="vscode-file",u.tmp="tmp",u.vsls="vsls",u.vscodeSourceControl="vscode-scm"}(D||(D={}));const i=new class{constructor(){this._hosts=Object.create(null),this._ports=Object.create(null),this._connectionTokens=Object.create(null),this._preferredWebSchema="http",this._delegate=null,this._remoteResourcesPath="/".concat(D.vscodeRemoteResource)}setPreferredWebSchema(u){this._preferredWebSchema=u}rewrite(u){if(this._delegate)try{return this._delegate(u)}catch(a){return n.dz(a),u}const t=u.authority;let e=this._hosts[t];e&&-1!==e.indexOf(":")&&-1===e.indexOf("[")&&(e="[".concat(e,"]"));const i=this._ports[t],o=this._connectionTokens[t];let h="path=".concat(encodeURIComponent(u.path));return"string"===typeof o&&(h+="&".concat("tkn","=").concat(encodeURIComponent(o))),s.r.from({scheme:r.HZ?this._preferredWebSchema:D.vscodeRemoteResource,authority:"".concat(e,":").concat(i),path:this._remoteResourcesPath,query:h})}};class o{uriToBrowserUri(u){return u.scheme===D.vscodeRemote?i.rewrite(u):u.scheme===D.file&&(r.ib||r.p7&&r.zQ.origin==="".concat(D.vscodeFileResource,"://").concat(o.FALLBACK_AUTHORITY))?u.with({scheme:D.vscodeFileResource,authority:u.authority||o.FALLBACK_AUTHORITY,query:null,fragment:null}):u}}o.FALLBACK_AUTHORITY="vscode-app";const h=new o;var a;!function(u){const t=new Map([["1",{"Cross-Origin-Opener-Policy":"same-origin"}],["2",{"Cross-Origin-Embedder-Policy":"require-corp"}],["3",{"Cross-Origin-Opener-Policy":"same-origin","Cross-Origin-Embedder-Policy":"require-corp"}]]);u.CoopAndCoep=Object.freeze(t.get("3"));const e="vscode-coi";u.getHeadersFromQuery=function(u){let D;"string"===typeof u?D=new URL(u).searchParams:u instanceof URL?D=u.searchParams:s.r.isUri(u)&&(D=new URL(u.toString(!0)).searchParams);const n=null===D||void 0===D?void 0:D.get(e);if(n)return t.get(n)},u.addSearchParam=function(u,t,D){if(!globalThis.crossOriginIsolated)return;const n=t&&D?"3":D?"2":"1";u instanceof URLSearchParams?u.set(e,n):u[e]=n}}(a||(a={}))},22079:(u,t,e)=>{function D(u,t,e){return Math.min(Math.max(u,t),e)}e.d(t,{Uq:()=>n,mu:()=>r,qE:()=>D});class n{constructor(){this._n=1,this._val=0}update(u){return this._val=this._val+(u-this._val)/this._n,this._n+=1,this._val}get value(){return this._val}}class r{constructor(u){this._n=0,this._val=0,this._values=[],this._index=0,this._sum=0,this._values=new Array(u),this._values.fill(0,0,u)}update(u){const t=this._values[this._index];return this._values[this._index]=u,this._index=(this._index+1)%this._values.length,this._sum-=t,this._sum+=u,this._n<this._values.length&&(this._n+=1),this._val=this._sum/this._n,this._val}get value(){return this._val}}},3021:(u,t,e)=>{e.d(t,{Go:()=>n,PI:()=>i,V0:()=>c,aI:()=>a,co:()=>h,kT:()=>l,ol:()=>r});var D=e(24796);function n(u){if(!u||"object"!==typeof u)return u;if(u instanceof RegExp)return u;const t=Array.isArray(u)?[]:{};return Object.entries(u).forEach((u=>{let[e,D]=u;t[e]=D&&"object"===typeof D?n(D):D})),t}function r(u){if(!u||"object"!==typeof u)return u;const t=[u];for(;t.length>0;){const u=t.shift();Object.freeze(u);for(const e in u)if(s.call(u,e)){const n=u[e];"object"!==typeof n||Object.isFrozen(n)||(0,D.iu)(n)||t.push(n)}}return u}const s=Object.prototype.hasOwnProperty;function i(u,t){return o(u,t,new Set)}function o(u,t,e){if((0,D.z)(u))return u;const n=t(u);if("undefined"!==typeof n)return n;if(Array.isArray(u)){const D=[];for(const n of u)D.push(o(n,t,e));return D}if((0,D.Gv)(u)){if(e.has(u))throw new Error("Cannot clone recursive data-structure");e.add(u);const D={};for(const n in u)s.call(u,n)&&(D[n]=o(u[n],t,e));return e.delete(u),D}return u}function h(u,t){let e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return(0,D.Gv)(u)?((0,D.Gv)(t)&&Object.keys(t).forEach((n=>{n in u?e&&((0,D.Gv)(u[n])&&(0,D.Gv)(t[n])?h(u[n],t[n],e):u[n]=t[n]):u[n]=t[n]})),u):t}function a(u,t){if(u===t)return!0;if(null===u||void 0===u||null===t||void 0===t)return!1;if(typeof u!==typeof t)return!1;if("object"!==typeof u)return!1;if(Array.isArray(u)!==Array.isArray(t))return!1;let e,D;if(Array.isArray(u)){if(u.length!==t.length)return!1;for(e=0;e<u.length;e++)if(!a(u[e],t[e]))return!1}else{const n=[];for(D in u)n.push(D);n.sort();const r=[];for(D in t)r.push(D);if(r.sort(),!a(n,r))return!1;for(e=0;e<n.length;e++)if(!a(u[n[e]],t[n[e]]))return!1}return!0}function c(u){const t=[];for(const e of function(u){let t=[];for(;Object.prototype!==u;)t=t.concat(Object.getOwnPropertyNames(u)),u=Object.getPrototypeOf(u);return t}(u))"function"===typeof u[e]&&t.push(e);return t}function l(u,t){const e=u=>function(){const e=Array.prototype.slice.call(arguments,0);return t(u,e)},D={};for(const n of u)D[n]=e(n);return D}},87882:(u,t,e)=>{let D,n;function r(){return D}e.d(t,{fm:()=>w,Y:()=>S,zL:()=>y,yC:()=>x,lk:()=>T,un:()=>B,nb:()=>m,C:()=>p,rm:()=>v,X2:()=>A,y0:()=>I,Yd:()=>U,yQ:()=>k,FY:()=>F,OI:()=>j,PO:()=>h,Rn:()=>o,oJ:()=>N});class s{get TChange(){return null}reportChanges(){this.get()}read(u){return u?u.readObservable(this):this.get()}map(u,t){const e=void 0===t?void 0:u,D=void 0===t?u:t;return n({owner:e,debugName:()=>{const u=l(D);if(void 0!==u)return u;const t=/^\s*\(?\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\s*\)?\s*=>\s*\1\.([a-zA-Z_$][a-zA-Z_$0-9]*)\s*$/.exec(D.toString());return t?"".concat(this.debugName,".").concat(t[2]):e?void 0:"".concat(this.debugName," (mapped)")}},(u=>D(this.read(u),u)))}}class i extends s{constructor(){super(...arguments),this.observers=new Set}addObserver(u){const t=this.observers.size;this.observers.add(u),0===t&&this.onFirstObserverAdded()}removeObserver(u){this.observers.delete(u)&&0===this.observers.size&&this.onLastObserverRemoved()}onFirstObserverAdded(){}onLastObserverRemoved(){}}function o(u,t){const e=new a(u,t);try{u(e)}finally{e.finish()}}function h(u,t,e){u?t(u):o(t,e)}class a{constructor(u,t){var e;this._fn=u,this._getDebugName=t,this.updatingObservers=[],null===(e=r())||void 0===e||e.handleBeginTransaction(this)}getDebugName(){return this._getDebugName?this._getDebugName():l(this._fn)}updateObserver(u,t){this.updatingObservers.push({observer:u,observable:t}),u.beginUpdate(t)}finish(){var u;const t=this.updatingObservers;this.updatingObservers=null;for(const{observer:e,observable:D}of t)e.endUpdate(D);null===(u=r())||void 0===u||u.handleEndTransaction()}}function c(u,t,e,D){let n;if(void 0!==u){if("function"!==typeof u)return u;if(n=u(),void 0!==n)return n}if(void 0!==t&&(n=l(t),void 0!==n))return n;if(void 0!==e)for(const r in e)if(e[r]===D)return r}function l(u){const t=u.toString(),e=/\/\*\*\s*@description\s*([^*]*)\*\//.exec(t),D=e?e[1]:void 0;return null===D||void 0===D?void 0:D.trim()}function F(u,t){return"string"===typeof u?new C(void 0,u,t):new C(u,void 0,t)}class C extends i{get debugName(){var u;return null!==(u=c(this._debugName,void 0,this._owner,this))&&void 0!==u?u:"ObservableValue"}constructor(u,t,e){super(),this._owner=u,this._debugName=t,this._value=e}get(){return this._value}set(u,t,e){var D;if(this._value===u)return;let n;t||(t=n=new a((()=>{}),(()=>"Setting ".concat(this.debugName))));try{const n=this._value;this._setValue(u),null===(D=r())||void 0===D||D.handleObservableChanged(this,{oldValue:n,newValue:u,change:e,didChange:!0,hadValue:!0});for(const u of this.observers)t.updateObserver(u,this),u.handleChange(this,e)}finally{n&&n.finish()}}toString(){return"".concat(this.debugName,": ").concat(this._value)}_setValue(u){this._value=u}}function A(u,t){return"string"===typeof u?new d(void 0,u,t):new d(u,void 0,t)}class d extends C{_setValue(u){this._value!==u&&(this._value&&this._value.dispose(),this._value=u)}dispose(){var u;null===(u=this._value)||void 0===u||u.dispose()}}var f=e(81530),E=e(24085);const g=(u,t)=>u===t;function B(u,t){return void 0!==t?new _(u,void 0,t,void 0,void 0,void 0,g):new _(void 0,void 0,u,void 0,void 0,void 0,g)}function p(u,t){var e;return new _(u.owner,u.debugName,t,void 0,void 0,void 0,null!==(e=u.equalityComparer)&&void 0!==e?e:g)}function m(u,t){var e;return new _(u.owner,u.debugName,t,u.createEmptyChangeSummary,u.handleChange,void 0,null!==(e=u.equalityComparer)&&void 0!==e?e:g)}function v(u,t){let e,D;void 0===t?(e=u,D=void 0):(D=u,e=t);const n=new E.Cm;return new _(D,(()=>{var u;return null!==(u=l(e))&&void 0!==u?u:"(anonymous)"}),(u=>(n.clear(),e(u,n))),void 0,void 0,(()=>n.dispose()),g)}!function(u){n=u}(B);class _ extends i{get debugName(){var u;return null!==(u=c(this._debugName,this._computeFn,this._owner,this))&&void 0!==u?u:"(anonymous)"}constructor(u,t,e,D,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;var o,h;super(),this._owner=u,this._debugName=t,this._computeFn=e,this.createChangeSummary=D,this._handleChange=n,this._handleLastObserverRemoved=s,this._equalityComparator=i,this.state=0,this.value=void 0,this.updateCount=0,this.dependencies=new Set,this.dependenciesToBeRemoved=new Set,this.changeSummary=void 0,this.changeSummary=null===(o=this.createChangeSummary)||void 0===o?void 0:o.call(this),null===(h=r())||void 0===h||h.handleDerivedCreated(this)}onLastObserverRemoved(){var u;this.state=0,this.value=void 0;for(const t of this.dependencies)t.removeObserver(this);this.dependencies.clear(),null===(u=this._handleLastObserverRemoved)||void 0===u||u.call(this)}get(){var u;if(0===this.observers.size){const t=this._computeFn(this,null===(u=this.createChangeSummary)||void 0===u?void 0:u.call(this));return this.onLastObserverRemoved(),t}do{if(1===this.state)for(const u of this.dependencies)if(u.reportChanges(),2===this.state)break;1===this.state&&(this.state=3),this._recomputeIfNeeded()}while(3!==this.state);return this.value}_recomputeIfNeeded(){var u,t;if(3===this.state)return;const e=this.dependenciesToBeRemoved;this.dependenciesToBeRemoved=this.dependencies,this.dependencies=e;const D=0!==this.state,n=this.value;this.state=3;const s=this.changeSummary;this.changeSummary=null===(u=this.createChangeSummary)||void 0===u?void 0:u.call(this);try{this.value=this._computeFn(this,s)}finally{for(const u of this.dependenciesToBeRemoved)u.removeObserver(this);this.dependenciesToBeRemoved.clear()}const i=D&&!this._equalityComparator(n,this.value);if(null===(t=r())||void 0===t||t.handleDerivedRecomputed(this,{oldValue:n,newValue:this.value,change:void 0,didChange:i,hadValue:D}),i)for(const r of this.observers)r.handleChange(this,void 0)}toString(){return"LazyDerived<".concat(this.debugName,">")}beginUpdate(u){this.updateCount++;const t=1===this.updateCount;if(3===this.state&&(this.state=1,!t))for(const e of this.observers)e.handlePossibleChange(this);if(t)for(const e of this.observers)e.beginUpdate(this)}endUpdate(u){if(this.updateCount--,0===this.updateCount){const u=[...this.observers];for(const t of u)t.endUpdate(this)}if(this.updateCount<0)throw new f.D7}handlePossibleChange(u){if(3===this.state&&this.dependencies.has(u)&&!this.dependenciesToBeRemoved.has(u)){this.state=1;for(const u of this.observers)u.handlePossibleChange(this)}}handleChange(u,t){if(this.dependencies.has(u)&&!this.dependenciesToBeRemoved.has(u)){const e=!this._handleChange||this._handleChange({changedObservable:u,change:t,didChange:t=>t===u},this.changeSummary),D=3===this.state;if(e&&(1===this.state||D)&&(this.state=2,D))for(const u of this.observers)u.handlePossibleChange(this)}}readObservable(u){u.addObserver(this);const t=u.get();return this.dependencies.add(u),this.dependenciesToBeRemoved.delete(u),t}addObserver(u){const t=!this.observers.has(u)&&this.updateCount>0;super.addObserver(u),t&&u.beginUpdate(this)}removeObserver(u){const t=this.observers.has(u)&&this.updateCount>0;super.removeObserver(u),t&&u.endUpdate(this)}}var b=e(87595);function y(u,t){return new O(u.debugName,t,void 0,void 0)}function w(u){return new O(void 0,u,void 0,void 0)}function S(u,t){return new O(u.debugName,t,u.createEmptyChangeSummary,u.handleChange)}function x(u){const t=new E.Cm,e=y({debugName:()=>l(u)||"(anonymous)"},(e=>{t.clear(),u(e,t)}));return(0,E.s)((()=>{e.dispose(),t.dispose()}))}class O{get debugName(){if("string"===typeof this._debugName)return this._debugName;if("function"===typeof this._debugName){const u=this._debugName();if(void 0!==u)return u}const u=l(this._runFn);return void 0!==u?u:"(anonymous)"}constructor(u,t,e,D){var n,s;this._debugName=u,this._runFn=t,this.createChangeSummary=e,this._handleChange=D,this.state=2,this.updateCount=0,this.disposed=!1,this.dependencies=new Set,this.dependenciesToBeRemoved=new Set,this.changeSummary=null===(n=this.createChangeSummary)||void 0===n?void 0:n.call(this),null===(s=r())||void 0===s||s.handleAutorunCreated(this),this._runIfNeeded(),(0,E.Ay)(this)}dispose(){this.disposed=!0;for(const u of this.dependencies)u.removeObserver(this);this.dependencies.clear(),(0,E.VD)(this)}_runIfNeeded(){var u,t,e;if(3===this.state)return;const D=this.dependenciesToBeRemoved;this.dependenciesToBeRemoved=this.dependencies,this.dependencies=D,this.state=3;try{if(!this.disposed){null===(u=r())||void 0===u||u.handleAutorunTriggered(this);const e=this.changeSummary;this.changeSummary=null===(t=this.createChangeSummary)||void 0===t?void 0:t.call(this),this._runFn(this,e)}}finally{null===(e=r())||void 0===e||e.handleAutorunFinished(this);for(const u of this.dependenciesToBeRemoved)u.removeObserver(this);this.dependenciesToBeRemoved.clear()}}toString(){return"Autorun<".concat(this.debugName,">")}beginUpdate(){3===this.state&&(this.state=1),this.updateCount++}endUpdate(){if(1===this.updateCount)do{if(1===this.state){this.state=3;for(const u of this.dependencies)if(u.reportChanges(),2===this.state)break}this._runIfNeeded()}while(3!==this.state);this.updateCount--,(0,b.Ft)((()=>this.updateCount>=0))}handlePossibleChange(u){3===this.state&&this.dependencies.has(u)&&!this.dependenciesToBeRemoved.has(u)&&(this.state=1)}handleChange(u,t){if(this.dependencies.has(u)&&!this.dependenciesToBeRemoved.has(u)){(!this._handleChange||this._handleChange({changedObservable:u,change:t,didChange:t=>t===u},this.changeSummary))&&(this.state=2)}}readObservable(u){if(this.disposed)return u.get();u.addObserver(this);const t=u.get();return this.dependencies.add(u),this.dependenciesToBeRemoved.delete(u),t}}function T(u){return new P(u)}!function(u){u.Observer=O}(w||(w={}));class P extends s{constructor(u){super(),this.value=u}get debugName(){return this.toString()}get(){return this.value}addObserver(u){}removeObserver(u){}toString(){return"Const: ".concat(this.value)}}function N(u,t){return new Promise((e=>{let D=!1,n=!1;const r=w((s=>{const i=u.read(s);t(i)&&(D?r.dispose():n=!0,e(i))}));D=!0,n&&r.dispose()}))}function I(u,t){return new L(u,t)}class L extends i{constructor(u,t){super(),this.event=u,this._getValue=t,this.hasValue=!1,this.handleEvent=u=>{var t;const e=this._getValue(u),D=!this.hasValue||this.value!==e;null===(t=r())||void 0===t||t.handleFromEventObservableTriggered(this,{oldValue:this.value,newValue:e,change:void 0,didChange:D,hadValue:this.hasValue}),D&&(this.value=e,this.hasValue&&o((u=>{for(const t of this.observers)u.updateObserver(t,this),t.handleChange(this,void 0)}),(()=>{const u=this.getDebugName();return"Event fired"+(u?": ".concat(u):"")})),this.hasValue=!0)}}getDebugName(){return l(this._getValue)}get debugName(){const u=this.getDebugName();return"From Event"+(u?": ".concat(u):"")}onFirstObserverAdded(){this.subscription=this.event(this.handleEvent)}onLastObserverRemoved(){this.subscription.dispose(),this.subscription=void 0,this.hasValue=!1,this.value=void 0}get(){return this.subscription?(this.hasValue||this.handleEvent(void 0),this.value):this._getValue(void 0)}}function k(u,t){return new R(u,t)}!function(u){u.Observer=L}(I||(I={}));class R extends i{constructor(u,t){super(),this.debugName=u,this.event=t,this.handleEvent=()=>{o((u=>{for(const t of this.observers)u.updateObserver(t,this),t.handleChange(this,void 0)}),(()=>this.debugName))}}onFirstObserverAdded(){this.subscription=this.event(this.handleEvent)}onLastObserverRemoved(){this.subscription.dispose(),this.subscription=void 0}get(){}}function U(u){return"string"===typeof u?new z(u):new z(void 0,u)}class z extends i{get debugName(){var u;return null!==(u=c(this._debugName,void 0,this._owner,this))&&void 0!==u?u:"Observable Signal"}constructor(u,t){super(),this._debugName=u,this._owner=t}trigger(u,t){if(u)for(const e of this.observers)u.updateObserver(e,this),e.handleChange(this,t);else o((u=>{this.trigger(u,t)}),(()=>"Trigger signal ".concat(this.debugName)))}get(){}}function j(u){const t=new M(!0);return u.addObserver(t),u.reportChanges(),(0,E.s)((()=>{u.removeObserver(t)}))}class M{constructor(u){this.forceRecompute=u,this.counter=0}beginUpdate(u){this.counter++}endUpdate(u){this.counter--,0===this.counter&&this.forceRecompute&&u.reportChanges()}handlePossibleChange(u){}handleChange(u,t){}}},10558:(u,t,e)=>{e.d(t,{IN:()=>d,LC:()=>_,P8:()=>v,S8:()=>g,SA:()=>E,V8:()=>p,Vn:()=>b,hd:()=>B,pD:()=>m});var D=e(9344);const n=46,r=47,s=92,i=58;class o extends Error{constructor(u,t,e){let D;"string"===typeof t&&0===t.indexOf("not ")?(D="must not be",t=t.replace(/^not /,"")):D="must be";const n=-1!==u.indexOf(".")?"property":"argument";let r='The "'.concat(u,'" ').concat(n," ").concat(D," of type ").concat(t);r+=". Received type ".concat(typeof e),super(r),this.code="ERR_INVALID_ARG_TYPE"}}function h(u,t){if("string"!==typeof u)throw new o(t,"string",u)}const a="win32"===D.iD;function c(u){return u===r||u===s}function l(u){return u===r}function F(u){return u>=65&&u<=90||u>=97&&u<=122}function C(u,t,e,D){let s="",i=0,o=-1,h=0,a=0;for(let c=0;c<=u.length;++c){if(c<u.length)a=u.charCodeAt(c);else{if(D(a))break;a=r}if(D(a)){if(o===c-1||1===h);else if(2===h){if(s.length<2||2!==i||s.charCodeAt(s.length-1)!==n||s.charCodeAt(s.length-2)!==n){if(s.length>2){const u=s.lastIndexOf(e);-1===u?(s="",i=0):(s=s.slice(0,u),i=s.length-1-s.lastIndexOf(e)),o=c,h=0;continue}if(0!==s.length){s="",i=0,o=c,h=0;continue}}t&&(s+=s.length>0?"".concat(e,".."):"..",i=2)}else s.length>0?s+="".concat(e).concat(u.slice(o+1,c)):s=u.slice(o+1,c),i=c-o-1;o=c,h=0}else a===n&&-1!==h?++h:h=-1}return s}function A(u,t){!function(u,t){if(null===u||"object"!==typeof u)throw new o(t,"Object",u)}(t,"pathObject");const e=t.dir||t.root,D=t.base||"".concat(t.name||"").concat(t.ext||"");return e?e===t.root?"".concat(e).concat(D):"".concat(e).concat(u).concat(D):D}const d={resolve(){let u="",t="",e=!1;for(let n=arguments.length-1;n>=-1;n--){let r;if(n>=0){if(r=n<0||arguments.length<=n?void 0:arguments[n],h(r,"path"),0===r.length)continue}else 0===u.length?r=D.bJ():(r={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}["=".concat(u)]||D.bJ(),(void 0===r||r.slice(0,2).toLowerCase()!==u.toLowerCase()&&r.charCodeAt(2)===s)&&(r="".concat(u,"\\")));const o=r.length;let a=0,l="",C=!1;const A=r.charCodeAt(0);if(1===o)c(A)&&(a=1,C=!0);else if(c(A))if(C=!0,c(r.charCodeAt(1))){let u=2,t=u;for(;u<o&&!c(r.charCodeAt(u));)u++;if(u<o&&u!==t){const e=r.slice(t,u);for(t=u;u<o&&c(r.charCodeAt(u));)u++;if(u<o&&u!==t){for(t=u;u<o&&!c(r.charCodeAt(u));)u++;u!==o&&u===t||(l="\\\\".concat(e,"\\").concat(r.slice(t,u)),a=u)}}}else a=1;else F(A)&&r.charCodeAt(1)===i&&(l=r.slice(0,2),a=2,o>2&&c(r.charCodeAt(2))&&(C=!0,a=3));if(l.length>0)if(u.length>0){if(l.toLowerCase()!==u.toLowerCase())continue}else u=l;if(e){if(u.length>0)break}else if(t="".concat(r.slice(a),"\\").concat(t),e=C,C&&u.length>0)break}return t=C(t,!e,"\\",c),e?"".concat(u,"\\").concat(t):"".concat(u).concat(t)||"."},normalize(u){h(u,"path");const t=u.length;if(0===t)return".";let e,D=0,n=!1;const r=u.charCodeAt(0);if(1===t)return l(r)?"\\":u;if(c(r))if(n=!0,c(u.charCodeAt(1))){let n=2,r=n;for(;n<t&&!c(u.charCodeAt(n));)n++;if(n<t&&n!==r){const s=u.slice(r,n);for(r=n;n<t&&c(u.charCodeAt(n));)n++;if(n<t&&n!==r){for(r=n;n<t&&!c(u.charCodeAt(n));)n++;if(n===t)return"\\\\".concat(s,"\\").concat(u.slice(r),"\\");n!==r&&(e="\\\\".concat(s,"\\").concat(u.slice(r,n)),D=n)}}}else D=1;else F(r)&&u.charCodeAt(1)===i&&(e=u.slice(0,2),D=2,t>2&&c(u.charCodeAt(2))&&(n=!0,D=3));let s=D<t?C(u.slice(D),!n,"\\",c):"";return 0!==s.length||n||(s="."),s.length>0&&c(u.charCodeAt(t-1))&&(s+="\\"),void 0===e?n?"\\".concat(s):s:n?"".concat(e,"\\").concat(s):"".concat(e).concat(s)},isAbsolute(u){h(u,"path");const t=u.length;if(0===t)return!1;const e=u.charCodeAt(0);return c(e)||t>2&&F(e)&&u.charCodeAt(1)===i&&c(u.charCodeAt(2))},join(){if(0===arguments.length)return".";let u,t;for(let n=0;n<arguments.length;++n){const e=n<0||arguments.length<=n?void 0:arguments[n];h(e,"path"),e.length>0&&(void 0===u?u=t=e:u+="\\".concat(e))}if(void 0===u)return".";let e=!0,D=0;if("string"===typeof t&&c(t.charCodeAt(0))){++D;const u=t.length;u>1&&c(t.charCodeAt(1))&&(++D,u>2&&(c(t.charCodeAt(2))?++D:e=!1))}if(e){for(;D<u.length&&c(u.charCodeAt(D));)D++;D>=2&&(u="\\".concat(u.slice(D)))}return d.normalize(u)},relative(u,t){if(h(u,"from"),h(t,"to"),u===t)return"";const e=d.resolve(u),D=d.resolve(t);if(e===D)return"";if((u=e.toLowerCase())===(t=D.toLowerCase()))return"";let n=0;for(;n<u.length&&u.charCodeAt(n)===s;)n++;let r=u.length;for(;r-1>n&&u.charCodeAt(r-1)===s;)r--;const i=r-n;let o=0;for(;o<t.length&&t.charCodeAt(o)===s;)o++;let a=t.length;for(;a-1>o&&t.charCodeAt(a-1)===s;)a--;const c=a-o,l=i<c?i:c;let F=-1,C=0;for(;C<l;C++){const e=u.charCodeAt(n+C);if(e!==t.charCodeAt(o+C))break;e===s&&(F=C)}if(C!==l){if(-1===F)return D}else{if(c>l){if(t.charCodeAt(o+C)===s)return D.slice(o+C+1);if(2===C)return D.slice(o+C)}i>l&&(u.charCodeAt(n+C)===s?F=C:2===C&&(F=3)),-1===F&&(F=0)}let A="";for(C=n+F+1;C<=r;++C)C!==r&&u.charCodeAt(C)!==s||(A+=0===A.length?"..":"\\..");return o+=F,A.length>0?"".concat(A).concat(D.slice(o,a)):(D.charCodeAt(o)===s&&++o,D.slice(o,a))},toNamespacedPath(u){if("string"!==typeof u||0===u.length)return u;const t=d.resolve(u);if(t.length<=2)return u;if(t.charCodeAt(0)===s){if(t.charCodeAt(1)===s){const u=t.charCodeAt(2);if(63!==u&&u!==n)return"\\\\?\\UNC\\".concat(t.slice(2))}}else if(F(t.charCodeAt(0))&&t.charCodeAt(1)===i&&t.charCodeAt(2)===s)return"\\\\?\\".concat(t);return u},dirname(u){h(u,"path");const t=u.length;if(0===t)return".";let e=-1,D=0;const n=u.charCodeAt(0);if(1===t)return c(n)?u:".";if(c(n)){if(e=D=1,c(u.charCodeAt(1))){let n=2,r=n;for(;n<t&&!c(u.charCodeAt(n));)n++;if(n<t&&n!==r){for(r=n;n<t&&c(u.charCodeAt(n));)n++;if(n<t&&n!==r){for(r=n;n<t&&!c(u.charCodeAt(n));)n++;if(n===t)return u;n!==r&&(e=D=n+1)}}}}else F(n)&&u.charCodeAt(1)===i&&(e=t>2&&c(u.charCodeAt(2))?3:2,D=e);let r=-1,s=!0;for(let i=t-1;i>=D;--i)if(c(u.charCodeAt(i))){if(!s){r=i;break}}else s=!1;if(-1===r){if(-1===e)return".";r=e}return u.slice(0,r)},basename(u,t){void 0!==t&&h(t,"ext"),h(u,"path");let e,D=0,n=-1,r=!0;if(u.length>=2&&F(u.charCodeAt(0))&&u.charCodeAt(1)===i&&(D=2),void 0!==t&&t.length>0&&t.length<=u.length){if(t===u)return"";let s=t.length-1,i=-1;for(e=u.length-1;e>=D;--e){const o=u.charCodeAt(e);if(c(o)){if(!r){D=e+1;break}}else-1===i&&(r=!1,i=e+1),s>=0&&(o===t.charCodeAt(s)?-1===--s&&(n=e):(s=-1,n=i))}return D===n?n=i:-1===n&&(n=u.length),u.slice(D,n)}for(e=u.length-1;e>=D;--e)if(c(u.charCodeAt(e))){if(!r){D=e+1;break}}else-1===n&&(r=!1,n=e+1);return-1===n?"":u.slice(D,n)},extname(u){h(u,"path");let t=0,e=-1,D=0,r=-1,s=!0,o=0;u.length>=2&&u.charCodeAt(1)===i&&F(u.charCodeAt(0))&&(t=D=2);for(let i=u.length-1;i>=t;--i){const t=u.charCodeAt(i);if(c(t)){if(!s){D=i+1;break}}else-1===r&&(s=!1,r=i+1),t===n?-1===e?e=i:1!==o&&(o=1):-1!==e&&(o=-1)}return-1===e||-1===r||0===o||1===o&&e===r-1&&e===D+1?"":u.slice(e,r)},format:A.bind(null,"\\"),parse(u){h(u,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(0===u.length)return t;const e=u.length;let D=0,r=u.charCodeAt(0);if(1===e)return c(r)?(t.root=t.dir=u,t):(t.base=t.name=u,t);if(c(r)){if(D=1,c(u.charCodeAt(1))){let t=2,n=t;for(;t<e&&!c(u.charCodeAt(t));)t++;if(t<e&&t!==n){for(n=t;t<e&&c(u.charCodeAt(t));)t++;if(t<e&&t!==n){for(n=t;t<e&&!c(u.charCodeAt(t));)t++;t===e?D=t:t!==n&&(D=t+1)}}}}else if(F(r)&&u.charCodeAt(1)===i){if(e<=2)return t.root=t.dir=u,t;if(D=2,c(u.charCodeAt(2))){if(3===e)return t.root=t.dir=u,t;D=3}}D>0&&(t.root=u.slice(0,D));let s=-1,o=D,a=-1,l=!0,C=u.length-1,A=0;for(;C>=D;--C)if(r=u.charCodeAt(C),c(r)){if(!l){o=C+1;break}}else-1===a&&(l=!1,a=C+1),r===n?-1===s?s=C:1!==A&&(A=1):-1!==s&&(A=-1);return-1!==a&&(-1===s||0===A||1===A&&s===a-1&&s===o+1?t.base=t.name=u.slice(o,a):(t.name=u.slice(o,s),t.base=u.slice(o,a),t.ext=u.slice(s,a))),t.dir=o>0&&o!==D?u.slice(0,o-1):t.root,t},sep:"\\",delimiter:";",win32:null,posix:null},f=(()=>{if(a){const u=/\\/g;return()=>{const t=D.bJ().replace(u,"/");return t.slice(t.indexOf("/"))}}return()=>D.bJ()})(),E={resolve(){let u="",t=!1;for(let e=arguments.length-1;e>=-1&&!t;e--){const D=e>=0?e<0||arguments.length<=e?void 0:arguments[e]:f();h(D,"path"),0!==D.length&&(u="".concat(D,"/").concat(u),t=D.charCodeAt(0)===r)}return u=C(u,!t,"/",l),t?"/".concat(u):u.length>0?u:"."},normalize(u){if(h(u,"path"),0===u.length)return".";const t=u.charCodeAt(0)===r,e=u.charCodeAt(u.length-1)===r;return 0===(u=C(u,!t,"/",l)).length?t?"/":e?"./":".":(e&&(u+="/"),t?"/".concat(u):u)},isAbsolute:u=>(h(u,"path"),u.length>0&&u.charCodeAt(0)===r),join(){if(0===arguments.length)return".";let u;for(let t=0;t<arguments.length;++t){const e=t<0||arguments.length<=t?void 0:arguments[t];h(e,"path"),e.length>0&&(void 0===u?u=e:u+="/".concat(e))}return void 0===u?".":E.normalize(u)},relative(u,t){if(h(u,"from"),h(t,"to"),u===t)return"";if((u=E.resolve(u))===(t=E.resolve(t)))return"";const e=u.length,D=e-1,n=t.length-1,s=D<n?D:n;let i=-1,o=0;for(;o<s;o++){const e=u.charCodeAt(1+o);if(e!==t.charCodeAt(1+o))break;e===r&&(i=o)}if(o===s)if(n>s){if(t.charCodeAt(1+o)===r)return t.slice(1+o+1);if(0===o)return t.slice(1+o)}else D>s&&(u.charCodeAt(1+o)===r?i=o:0===o&&(i=0));let a="";for(o=1+i+1;o<=e;++o)o!==e&&u.charCodeAt(o)!==r||(a+=0===a.length?"..":"/..");return"".concat(a).concat(t.slice(1+i))},toNamespacedPath:u=>u,dirname(u){if(h(u,"path"),0===u.length)return".";const t=u.charCodeAt(0)===r;let e=-1,D=!0;for(let n=u.length-1;n>=1;--n)if(u.charCodeAt(n)===r){if(!D){e=n;break}}else D=!1;return-1===e?t?"/":".":t&&1===e?"//":u.slice(0,e)},basename(u,t){void 0!==t&&h(t,"ext"),h(u,"path");let e,D=0,n=-1,s=!0;if(void 0!==t&&t.length>0&&t.length<=u.length){if(t===u)return"";let i=t.length-1,o=-1;for(e=u.length-1;e>=0;--e){const h=u.charCodeAt(e);if(h===r){if(!s){D=e+1;break}}else-1===o&&(s=!1,o=e+1),i>=0&&(h===t.charCodeAt(i)?-1===--i&&(n=e):(i=-1,n=o))}return D===n?n=o:-1===n&&(n=u.length),u.slice(D,n)}for(e=u.length-1;e>=0;--e)if(u.charCodeAt(e)===r){if(!s){D=e+1;break}}else-1===n&&(s=!1,n=e+1);return-1===n?"":u.slice(D,n)},extname(u){h(u,"path");let t=-1,e=0,D=-1,s=!0,i=0;for(let o=u.length-1;o>=0;--o){const h=u.charCodeAt(o);if(h!==r)-1===D&&(s=!1,D=o+1),h===n?-1===t?t=o:1!==i&&(i=1):-1!==t&&(i=-1);else if(!s){e=o+1;break}}return-1===t||-1===D||0===i||1===i&&t===D-1&&t===e+1?"":u.slice(t,D)},format:A.bind(null,"/"),parse(u){h(u,"path");const t={root:"",dir:"",base:"",ext:"",name:""};if(0===u.length)return t;const e=u.charCodeAt(0)===r;let D;e?(t.root="/",D=1):D=0;let s=-1,i=0,o=-1,a=!0,c=u.length-1,l=0;for(;c>=D;--c){const t=u.charCodeAt(c);if(t!==r)-1===o&&(a=!1,o=c+1),t===n?-1===s?s=c:1!==l&&(l=1):-1!==s&&(l=-1);else if(!a){i=c+1;break}}if(-1!==o){const D=0===i&&e?1:i;-1===s||0===l||1===l&&s===o-1&&s===i+1?t.base=t.name=u.slice(D,o):(t.name=u.slice(D,s),t.base=u.slice(D,o),t.ext=u.slice(s,o))}return i>0?t.dir=u.slice(0,i-1):e&&(t.dir="/"),t},sep:"/",delimiter:":",win32:null,posix:null};E.win32=d.win32=d,E.posix=d.posix=E;const g=a?d.normalize:E.normalize,B=a?d.resolve:E.resolve,p=a?d.relative:E.relative,m=a?d.dirname:E.dirname,v=a?d.basename:E.basename,_=a?d.extname:E.extname,b=a?d.sep:E.sep},23478:(u,t,e)=>{e.d(t,{BH:()=>k,Fr:()=>I,H8:()=>W,HZ:()=>T,OS:()=>z,UP:()=>G,_p:()=>U,cm:()=>V,gm:()=>q,ib:()=>O,j9:()=>x,nr:()=>H,p7:()=>P,uF:()=>w,un:()=>N,zQ:()=>m,zx:()=>S});var D,n=e(21742),r=e(45683);const s="en";let i,o,h=!1,a=!1,c=!1,l=!1,F=!1,C=!1,A=!1,d=!1,f=!1,E=!1,g=s,B=null,p=null;const m="object"===typeof self?self:"object"===typeof e.g?e.g:{};let v;"undefined"!==typeof m.vscode&&"undefined"!==typeof m.vscode.process?v=m.vscode.process:"undefined"!==typeof r&&(v=r);const _="string"===typeof(null===(D=null===v||void 0===v?void 0:v.versions)||void 0===D?void 0:D.electron),b=_&&"renderer"===(null===v||void 0===v?void 0:v.type);if("object"!==typeof navigator||b)if("object"===typeof v){h="win32"===v.platform,a="darwin"===v.platform,c="linux"===v.platform,l=c&&!!v.env.SNAP&&!!v.env.SNAP_REVISION,A=_,f=!!v.env.CI||!!v.env.BUILD_ARTIFACTSTAGINGDIRECTORY,i=s,g=s;const u=v.env.VSCODE_NLS_CONFIG;if(u)try{const t=JSON.parse(u),e=t.availableLanguages["*"];i=t.locale,B=t.osLocale,g=e||s,p=t._translationsConfigFile}catch(Z){}F=!0}else console.error("Unable to resolve platform.");else{o=navigator.userAgent,h=o.indexOf("Windows")>=0,a=o.indexOf("Macintosh")>=0,d=(o.indexOf("Macintosh")>=0||o.indexOf("iPad")>=0||o.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0,c=o.indexOf("Linux")>=0,E=(null===o||void 0===o?void 0:o.indexOf("Mobi"))>=0,C=!0;i=n.AM(n.kg({key:"ensureLoaderPluginIsLoaded",comment:["{Locked}"]},"_"))||s,g=i,B=navigator.language}let y=0;a?y=1:h?y=3:c&&(y=2);const w=h,S=a,x=c,O=F,T=C,P=C&&"function"===typeof m.importScripts,N=d,I=E,L=o,k=g,R="function"===typeof m.postMessage&&!m.importScripts,U=(()=>{if(R){const u=[];m.addEventListener("message",(t=>{if(t.data&&t.data.vscodeScheduleAsyncWork)for(let e=0,D=u.length;e<D;e++){const D=u[e];if(D.id===t.data.vscodeScheduleAsyncWork)return u.splice(e,1),void D.callback()}}));let t=0;return e=>{const D=++t;u.push({id:D,callback:e}),m.postMessage({vscodeScheduleAsyncWork:D},"*")}}return u=>setTimeout(u)})(),z=a||d?2:h?1:3;let j=!0,M=!1;function V(){if(!M){M=!0;const u=new Uint8Array(2);u[0]=1,u[1]=2;const t=new Uint16Array(u.buffer);j=513===t[0]}return j}const W=!!(L&&L.indexOf("Chrome")>=0),q=!!(L&&L.indexOf("Firefox")>=0),H=!!(!W&&L&&L.indexOf("Safari")>=0),G=!!(L&&L.indexOf("Edg/")>=0);L&&L.indexOf("Android")},9344:(u,t,e)=>{e.d(t,{_K:()=>i,bJ:()=>s,iD:()=>o});var D=e(23478),n=e(45683);let r;if("undefined"!==typeof D.zQ.vscode&&"undefined"!==typeof D.zQ.vscode.process){const u=D.zQ.vscode.process;r={get platform(){return u.platform},get arch(){return u.arch},get env(){return u.env},cwd:()=>u.cwd()}}else r="undefined"!==typeof n?{get platform(){return n.platform},get arch(){return n.arch},get env(){return{NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}},cwd:()=>({NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.VSCODE_CWD||n.cwd())}:{get platform(){return D.uF?"win32":D.zx?"darwin":"linux"},get arch(){},get env(){return{}},cwd:()=>"/"};const s=r.cwd,i=r.env,o=r.platform},53632:(u,t,e)=>{var D;e.d(t,{Q:()=>D}),function(u){function t(u,t){if(u.start>=t.end||t.start>=u.end)return{start:0,end:0};const e=Math.max(u.start,t.start),D=Math.min(u.end,t.end);return D-e<=0?{start:0,end:0}:{start:e,end:D}}function e(u){return u.end-u.start<=0}u.intersect=t,u.isEmpty=e,u.intersects=function(u,D){return!e(t(u,D))},u.relativeComplement=function(u,t){const D=[],n={start:u.start,end:Math.min(t.start,u.end)},r={start:Math.max(t.end,u.start),end:u.end};return e(n)||D.push(n),e(r)||D.push(r),D}}(D||(D={}))},29956:(u,t,e)=>{e.d(t,{B6:()=>v,Fd:()=>E,LC:()=>A,P8:()=>C,Pi:()=>F,er:()=>c,iZ:()=>g,n4:()=>l,o1:()=>B,pD:()=>d,su:()=>h,uJ:()=>f});var D=e(44953),n=e(39107),r=e(10558),s=e(23478),i=e(24939),o=e(45375);function h(u){return(0,o.I)(u,!0)}class a{constructor(u){this._ignorePathCasing=u}compare(u,t){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return u===t?0:(0,i.UD)(this.getComparisonKey(u,e),this.getComparisonKey(t,e))}isEqual(u,t){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return u===t||!(!u||!t)&&this.getComparisonKey(u,e)===this.getComparisonKey(t,e)}getComparisonKey(u){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return u.with({path:this._ignorePathCasing(u)?u.path.toLowerCase():void 0,fragment:t?null:void 0}).toString()}isEqualOrParent(u,t){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(u.scheme===t.scheme){if(u.scheme===n.ny.file)return D._1(h(u),h(t),this._ignorePathCasing(u))&&u.query===t.query&&(e||u.fragment===t.fragment);if(p(u.authority,t.authority))return D._1(u.path,t.path,this._ignorePathCasing(u),"/")&&u.query===t.query&&(e||u.fragment===t.fragment)}return!1}joinPath(u){for(var t=arguments.length,e=new Array(t>1?t-1:0),D=1;D<t;D++)e[D-1]=arguments[D];return o.r.joinPath(u,...e)}basenameOrAuthority(u){return C(u)||u.authority}basename(u){return r.SA.basename(u.path)}extname(u){return r.SA.extname(u.path)}dirname(u){if(0===u.path.length)return u;let t;return u.scheme===n.ny.file?t=o.r.file(r.pD(h(u))).path:(t=r.SA.dirname(u.path),u.authority&&t.length&&47!==t.charCodeAt(0)&&(console.error('dirname("'.concat(u.toString,")) resulted in a relative path")),t="/")),u.with({path:t})}normalizePath(u){if(!u.path.length)return u;let t;return t=u.scheme===n.ny.file?o.r.file(r.S8(h(u))).path:r.SA.normalize(u.path),u.with({path:t})}relativePath(u,t){if(u.scheme!==t.scheme||!p(u.authority,t.authority))return;if(u.scheme===n.ny.file){const e=r.V8(h(u),h(t));return s.uF?D.TH(e):e}let e=u.path||"/";const i=t.path||"/";if(this._ignorePathCasing(u)){let u=0;for(const t=Math.min(e.length,i.length);u<t&&(e.charCodeAt(u)===i.charCodeAt(u)||e.charAt(u).toLowerCase()===i.charAt(u).toLowerCase());u++);e=i.substr(0,u)+e.substr(u)}return r.SA.relative(e,i)}resolvePath(u,t){if(u.scheme===n.ny.file){const e=o.r.file(r.hd(h(u),t));return u.with({authority:e.authority,path:e.path})}return t=D.kb(t),u.with({path:r.SA.resolve(u.path,t)})}isAbsolutePath(u){return!!u.path&&"/"===u.path[0]}isEqualAuthority(u,t){return u===t||void 0!==u&&void 0!==t&&(0,i.Q_)(u,t)}hasTrailingPathSeparator(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.Vn;if(u.scheme===n.ny.file){const e=h(u);return e.length>D.Zn(e).length&&e[e.length-1]===t}{const t=u.path;return t.length>1&&47===t.charCodeAt(t.length-1)&&!/^[a-zA-Z]:(\/$|\\$)/.test(u.fsPath)}}removeTrailingPathSeparator(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.Vn;return m(u,t)?u.with({path:u.path.substr(0,u.path.length-1)}):u}addTrailingPathSeparator(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.Vn,e=!1;if(u.scheme===n.ny.file){const n=h(u);e=void 0!==n&&n.length===D.Zn(n).length&&n[n.length-1]===t}else{t="/";const D=u.path;e=1===D.length&&47===D.charCodeAt(D.length-1)}return e||m(u,t)?u:u.with({path:u.path+"/"})}}const c=new a((()=>!1)),l=(new a((u=>u.scheme!==n.ny.file||!s.j9)),new a((u=>!0)),c.isEqual.bind(c)),F=(c.isEqualOrParent.bind(c),c.getComparisonKey.bind(c),c.basenameOrAuthority.bind(c)),C=c.basename.bind(c),A=c.extname.bind(c),d=c.dirname.bind(c),f=c.joinPath.bind(c),E=c.normalizePath.bind(c),g=c.relativePath.bind(c),B=c.resolvePath.bind(c),p=(c.isAbsolutePath.bind(c),c.isEqualAuthority.bind(c)),m=c.hasTrailingPathSeparator.bind(c);c.removeTrailingPathSeparator.bind(c),c.addTrailingPathSeparator.bind(c);var v;!function(u){u.META_DATA_LABEL="label",u.META_DATA_DESCRIPTION="description",u.META_DATA_SIZE="size",u.META_DATA_MIME="mime",u.parseMetaData=function(t){const e=new Map;t.path.substring(t.path.indexOf(";")+1,t.path.lastIndexOf(";")).split(";").forEach((u=>{const[t,D]=u.split(":");t&&D&&e.set(t,D)}));const D=t.path.substring(0,t.path.indexOf(";"));return D&&e.set(u.META_DATA_MIME,D),e}}(v||(v={}))},24280:(u,t,e)=>{e.d(t,{yE:()=>s});var D=e(56637),n=e(24085);class r{constructor(u,t,e,D,n,r,s){this._forceIntegerValues=u,this._scrollStateBrand=void 0,this._forceIntegerValues&&(t|=0,e|=0,D|=0,n|=0,r|=0,s|=0),this.rawScrollLeft=D,this.rawScrollTop=s,t<0&&(t=0),D+t>e&&(D=e-t),D<0&&(D=0),n<0&&(n=0),s+n>r&&(s=r-n),s<0&&(s=0),this.width=t,this.scrollWidth=e,this.scrollLeft=D,this.height=n,this.scrollHeight=r,this.scrollTop=s}equals(u){return this.rawScrollLeft===u.rawScrollLeft&&this.rawScrollTop===u.rawScrollTop&&this.width===u.width&&this.scrollWidth===u.scrollWidth&&this.scrollLeft===u.scrollLeft&&this.height===u.height&&this.scrollHeight===u.scrollHeight&&this.scrollTop===u.scrollTop}withScrollDimensions(u,t){return new r(this._forceIntegerValues,"undefined"!==typeof u.width?u.width:this.width,"undefined"!==typeof u.scrollWidth?u.scrollWidth:this.scrollWidth,t?this.rawScrollLeft:this.scrollLeft,"undefined"!==typeof u.height?u.height:this.height,"undefined"!==typeof u.scrollHeight?u.scrollHeight:this.scrollHeight,t?this.rawScrollTop:this.scrollTop)}withScrollPosition(u){return new r(this._forceIntegerValues,this.width,this.scrollWidth,"undefined"!==typeof u.scrollLeft?u.scrollLeft:this.rawScrollLeft,this.height,this.scrollHeight,"undefined"!==typeof u.scrollTop?u.scrollTop:this.rawScrollTop)}createScrollEvent(u,t){const e=this.width!==u.width,D=this.scrollWidth!==u.scrollWidth,n=this.scrollLeft!==u.scrollLeft,r=this.height!==u.height,s=this.scrollHeight!==u.scrollHeight,i=this.scrollTop!==u.scrollTop;return{inSmoothScrolling:t,oldWidth:u.width,oldScrollWidth:u.scrollWidth,oldScrollLeft:u.scrollLeft,width:this.width,scrollWidth:this.scrollWidth,scrollLeft:this.scrollLeft,oldHeight:u.height,oldScrollHeight:u.scrollHeight,oldScrollTop:u.scrollTop,height:this.height,scrollHeight:this.scrollHeight,scrollTop:this.scrollTop,widthChanged:e,scrollWidthChanged:D,scrollLeftChanged:n,heightChanged:r,scrollHeightChanged:s,scrollTopChanged:i}}}class s extends n.jG{constructor(u){super(),this._scrollableBrand=void 0,this._onScroll=this._register(new D.vl),this.onScroll=this._onScroll.event,this._smoothScrollDuration=u.smoothScrollDuration,this._scheduleAtNextAnimationFrame=u.scheduleAtNextAnimationFrame,this._state=new r(u.forceIntegerValues,0,0,0,0,0,0),this._smoothScrolling=null}dispose(){this._smoothScrolling&&(this._smoothScrolling.dispose(),this._smoothScrolling=null),super.dispose()}setSmoothScrollDuration(u){this._smoothScrollDuration=u}validateScrollPosition(u){return this._state.withScrollPosition(u)}getScrollDimensions(){return this._state}setScrollDimensions(u,t){var e;const D=this._state.withScrollDimensions(u,t);this._setState(D,Boolean(this._smoothScrolling)),null===(e=this._smoothScrolling)||void 0===e||e.acceptScrollDimensions(this._state)}getFutureScrollPosition(){return this._smoothScrolling?this._smoothScrolling.to:this._state}getCurrentScrollPosition(){return this._state}setScrollPositionNow(u){const t=this._state.withScrollPosition(u);this._smoothScrolling&&(this._smoothScrolling.dispose(),this._smoothScrolling=null),this._setState(t,!1)}setScrollPositionSmooth(u,t){if(0===this._smoothScrollDuration)return this.setScrollPositionNow(u);if(this._smoothScrolling){u={scrollLeft:"undefined"===typeof u.scrollLeft?this._smoothScrolling.to.scrollLeft:u.scrollLeft,scrollTop:"undefined"===typeof u.scrollTop?this._smoothScrolling.to.scrollTop:u.scrollTop};const e=this._state.withScrollPosition(u);if(this._smoothScrolling.to.scrollLeft===e.scrollLeft&&this._smoothScrolling.to.scrollTop===e.scrollTop)return;let D;D=t?new h(this._smoothScrolling.from,e,this._smoothScrolling.startTime,this._smoothScrolling.duration):this._smoothScrolling.combine(this._state,e,this._smoothScrollDuration),this._smoothScrolling.dispose(),this._smoothScrolling=D}else{const t=this._state.withScrollPosition(u);this._smoothScrolling=h.start(this._state,t,this._smoothScrollDuration)}this._smoothScrolling.animationFrameDisposable=this._scheduleAtNextAnimationFrame((()=>{this._smoothScrolling&&(this._smoothScrolling.animationFrameDisposable=null,this._performSmoothScrolling())}))}hasPendingScrollAnimation(){return Boolean(this._smoothScrolling)}_performSmoothScrolling(){if(!this._smoothScrolling)return;const u=this._smoothScrolling.tick(),t=this._state.withScrollPosition(u);return this._setState(t,!0),this._smoothScrolling?u.isDone?(this._smoothScrolling.dispose(),void(this._smoothScrolling=null)):void(this._smoothScrolling.animationFrameDisposable=this._scheduleAtNextAnimationFrame((()=>{this._smoothScrolling&&(this._smoothScrolling.animationFrameDisposable=null,this._performSmoothScrolling())}))):void 0}_setState(u,t){const e=this._state;e.equals(u)||(this._state=u,this._onScroll.fire(this._state.createScrollEvent(e,t)))}}class i{constructor(u,t,e){this.scrollLeft=u,this.scrollTop=t,this.isDone=e}}function o(u,t){const e=t-u;return function(t){return u+e*(1-function(u){return Math.pow(u,3)}(1-t))}}class h{constructor(u,t,e,D){this.from=u,this.to=t,this.duration=D,this.startTime=e,this.animationFrameDisposable=null,this._initAnimations()}_initAnimations(){this.scrollLeft=this._initAnimation(this.from.scrollLeft,this.to.scrollLeft,this.to.width),this.scrollTop=this._initAnimation(this.from.scrollTop,this.to.scrollTop,this.to.height)}_initAnimation(u,t,e){if(Math.abs(u-t)>2.5*e){let s,i;return u<t?(s=u+.75*e,i=t-.75*e):(s=u-.75*e,i=t+.75*e),D=o(u,s),n=o(i,t),r=.33,function(u){return u<r?D(u/r):n((u-r)/(1-r))}}var D,n,r;return o(u,t)}dispose(){null!==this.animationFrameDisposable&&(this.animationFrameDisposable.dispose(),this.animationFrameDisposable=null)}acceptScrollDimensions(u){this.to=u.withScrollPosition(this.to),this._initAnimations()}tick(){return this._tick(Date.now())}_tick(u){const t=(u-this.startTime)/this.duration;if(t<1){const u=this.scrollLeft(t),e=this.scrollTop(t);return new i(u,e,!1)}return new i(this.to.scrollLeft,this.to.scrollTop,!0)}combine(u,t,e){return h.start(u,t,e)}static start(u,t,e){e+=10;const D=Date.now()-10;return new h(u,t,D,e)}}},61457:(u,t,e)=>{e.d(t,{u:()=>n});var D=e(24939);function n(u,t){if(u&&""!==u[0]){const e=r(u,t,"-"),n=r(u,t,"_");return e&&!n?s(u,t,"-"):!e&&n?s(u,t,"_"):u[0].toUpperCase()===u[0]?t.toUpperCase():u[0].toLowerCase()===u[0]?t.toLowerCase():D.zY(u[0][0])&&t.length>0?t[0].toUpperCase()+t.substr(1):u[0][0].toUpperCase()!==u[0][0]&&t.length>0?t[0].toLowerCase()+t.substr(1):t}return t}function r(u,t,e){return-1!==u[0].indexOf(e)&&-1!==t.indexOf(e)&&u[0].split(e).length===t.split(e).length}function s(u,t,e){const D=t.split(e),r=u[0].split(e);let s="";return D.forEach(((u,t)=>{s+=n([r[t]],u)+e})),s.slice(0,-1)}},66146:(u,t,e)=>{e.d(t,{A:()=>r});var D,n=e(24939);!function(u){u[u.Ignore=0]="Ignore",u[u.Info=1]="Info",u[u.Warning=2]="Warning",u[u.Error=3]="Error"}(D||(D={})),function(u){const t="error",e="warning",D="info";u.fromValue=function(r){return r?n.Q_(t,r)?u.Error:n.Q_(e,r)||n.Q_("warn",r)?u.Warning:n.Q_(D,r)?u.Info:u.Ignore:u.Ignore},u.toString=function(n){switch(n){case u.Error:return t;case u.Warning:return e;case u.Info:return D;default:return"ignore"}}}(D||(D={}));const r=D},90398:(u,t,e)=>{e.d(t,{W:()=>n});const D=globalThis.performance&&"function"===typeof globalThis.performance.now;class n{static create(u){return new n(u)}constructor(u){this._now=D&&!1===u?Date.now:globalThis.performance.now.bind(globalThis.performance),this._startTime=this._now(),this._stopTime=-1}stop(){this._stopTime=this._now()}elapsed(){return-1!==this._stopTime?this._stopTime-this._startTime:this._now()-this._startTime}}},24939:(u,t,e)=>{e.d(t,{$X:()=>Z,AV:()=>s,BO:()=>F,Bm:()=>C,Bq:()=>c,DB:()=>y,E_:()=>W,GP:()=>o,HG:()=>g,LJ:()=>I,LU:()=>J,Lv:()=>w,MV:()=>j,NB:()=>l,OS:()=>d,Q_:()=>x,Qp:()=>T,S8:()=>nu,Ss:()=>$,UD:()=>m,UU:()=>B,Vi:()=>P,W1:()=>_,Wd:()=>eu,Wv:()=>S,Z5:()=>k,_J:()=>G,aC:()=>H,bm:()=>a,eY:()=>f,ih:()=>h,iy:()=>z,km:()=>U,lF:()=>v,lT:()=>p,m:()=>M,ne:()=>K,ns:()=>O,pc:()=>N,r_:()=>Q,tk:()=>X,tl:()=>ru,uz:()=>E,wB:()=>A,y_:()=>su,zY:()=>Y,z_:()=>L,zd:()=>b});var D,n=e(57059),r=e(1547);function s(u){return!u||"string"!==typeof u||0===u.trim().length}const i=/{(\d+)}/g;function o(u){for(var t=arguments.length,e=new Array(t>1?t-1:0),D=1;D<t;D++)e[D-1]=arguments[D];return 0===e.length?u:u.replace(i,(function(u,t){const D=parseInt(t,10);return isNaN(D)||D<0||D>=e.length?u:e[D]}))}function h(u){return u.replace(/[<>&]/g,(function(u){switch(u){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";default:return u}}))}function a(u){return u.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}function c(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ";return F(l(u,t),t)}function l(u,t){if(!u||!t)return u;const e=t.length;if(0===e||0===u.length)return u;let D=0;for(;u.indexOf(t,D)===D;)D+=e;return u.substring(D)}function F(u,t){if(!u||!t)return u;const e=t.length,D=u.length;if(0===e||0===D)return u;let n=D,r=-1;for(;r=u.lastIndexOf(t,n-1),-1!==r&&r+e===n;){if(0===r)return"";n=r}return u.substring(0,n)}function C(u){return u.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g,"\\$&").replace(/[\*]/g,".*")}function A(u){return u.replace(/\*/g,"")}function d(u,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!u)throw new Error("Cannot create regex from empty string");t||(u=a(u)),e.wholeWord&&(/\B/.test(u.charAt(0))||(u="\\b"+u),/\B/.test(u.charAt(u.length-1))||(u+="\\b"));let D="";return e.global&&(D+="g"),e.matchCase||(D+="i"),e.multiline&&(D+="m"),e.unicode&&(D+="u"),new RegExp(u,D)}function f(u){if("^"===u.source||"^$"===u.source||"$"===u.source||"^\\s*$"===u.source)return!1;return!(!u.exec("")||0!==u.lastIndex)}function E(u){return u.split(/\r\n|\r|\n/)}function g(u){for(let t=0,e=u.length;t<e;t++){const e=u.charCodeAt(t);if(32!==e&&9!==e)return t}return-1}function B(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.length;for(let D=t;D<e;D++){const e=u.charCodeAt(D);if(32!==e&&9!==e)return u.substring(t,D)}return u.substring(t,e)}function p(u){for(let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.length-1;t>=0;t--){const e=u.charCodeAt(t);if(32!==e&&9!==e)return t}return-1}function m(u,t){return u<t?-1:u>t?1:0}function v(u,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,D=arguments.length>3&&void 0!==arguments[3]?arguments[3]:u.length,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:t.length;for(;e<D&&n<r;e++,n++){const D=u.charCodeAt(e),r=t.charCodeAt(n);if(D<r)return-1;if(D>r)return 1}const s=D-e,i=r-n;return s<i?-1:s>i?1:0}function _(u,t){return b(u,t,0,u.length,0,t.length)}function b(u,t){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,D=arguments.length>3&&void 0!==arguments[3]?arguments[3]:u.length,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:t.length;for(;e<D&&n<r;e++,n++){let s=u.charCodeAt(e),i=t.charCodeAt(n);if(s===i)continue;if(s>=128||i>=128)return v(u.toLowerCase(),t.toLowerCase(),e,D,n,r);w(s)&&(s-=32),w(i)&&(i-=32);const o=s-i;if(0!==o)return o}const s=D-e,i=r-n;return s<i?-1:s>i?1:0}function y(u){return u>=48&&u<=57}function w(u){return u>=97&&u<=122}function S(u){return u>=65&&u<=90}function x(u,t){return u.length===t.length&&0===b(u,t)}function O(u,t){const e=t.length;return!(t.length>u.length)&&0===b(u,t,0,e)}function T(u,t){const e=Math.min(u.length,t.length);let D;for(D=0;D<e;D++)if(u.charCodeAt(D)!==t.charCodeAt(D))return D;return e}function P(u,t){const e=Math.min(u.length,t.length);let D;const n=u.length-1,r=t.length-1;for(D=0;D<e;D++)if(u.charCodeAt(n-D)!==t.charCodeAt(r-D))return D;return e}function N(u){return 55296<=u&&u<=56319}function I(u){return 56320<=u&&u<=57343}function L(u,t){return t-56320+(u-55296<<10)+65536}function k(u,t,e){const D=u.charCodeAt(e);if(N(D)&&e+1<t){const t=u.charCodeAt(e+1);if(I(t))return L(D,t)}return D}class R{get offset(){return this._offset}constructor(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this._str=u,this._len=u.length,this._offset=t}setOffset(u){this._offset=u}prevCodePoint(){const u=function(u,t){const e=u.charCodeAt(t-1);if(I(e)&&t>1){const D=u.charCodeAt(t-2);if(N(D))return L(D,e)}return e}(this._str,this._offset);return this._offset-=u>=65536?2:1,u}nextCodePoint(){const u=k(this._str,this._len,this._offset);return this._offset+=u>=65536?2:1,u}eol(){return this._offset>=this._len}}class U{get offset(){return this._iterator.offset}constructor(u){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this._iterator=new R(u,t)}nextGraphemeLength(){const u=tu.getInstance(),t=this._iterator,e=t.offset;let D=u.getGraphemeBreakType(t.nextCodePoint());for(;!t.eol();){const e=t.offset,n=u.getGraphemeBreakType(t.nextCodePoint());if(uu(D,n)){t.setOffset(e);break}D=n}return t.offset-e}prevGraphemeLength(){const u=tu.getInstance(),t=this._iterator,e=t.offset;let D=u.getGraphemeBreakType(t.prevCodePoint());for(;t.offset>0;){const e=t.offset,n=u.getGraphemeBreakType(t.prevCodePoint());if(uu(n,D)){t.setOffset(e);break}D=n}return e-t.offset}eol(){return this._iterator.eol()}}function z(u,t){return new U(u,t).nextGraphemeLength()}function j(u,t){return new U(u,t).prevGraphemeLength()}function M(u,t){t>0&&I(u.charCodeAt(t))&&t--;const e=t+z(u,t);return[e-j(u,e),e]}let V;function W(u){return V||(V=/(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA\u07FE-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u088E\u08A0-\u08C9\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDC7\uFDF0-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE35\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDD23\uDE80-\uDEA9\uDEAD-\uDF45\uDF51-\uDF81\uDF86-\uDFF6]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD4B-\uDFFF]|\uD83B[\uDC00-\uDEBB])/),V.test(u)}const q=/^[\t\n\r\x20-\x7E]*$/;function H(u){return q.test(u)}const G=/[\u2028\u2029]/;function Z(u){return G.test(u)}function K(u){return u>=11904&&u<=55215||u>=63744&&u<=64255||u>=65281&&u<=65374}function $(u){return u>=127462&&u<=127487||8986===u||8987===u||9200===u||9203===u||u>=9728&&u<=10175||11088===u||11093===u||u>=127744&&u<=128591||u>=128640&&u<=128764||u>=128992&&u<=129008||u>=129280&&u<=129535||u>=129648&&u<=129782}const Q=String.fromCharCode(65279);function J(u){return!!(u&&u.length>0&&65279===u.charCodeAt(0))}function Y(u){return!!u&&(arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(u=u.replace(/\\./g,"")),u.toLowerCase()!==u)}function X(u){return(u%=52)<26?String.fromCharCode(97+u):String.fromCharCode(65+u-26)}function uu(u,t){return 0===u?5!==t&&7!==t:(2!==u||3!==t)&&(4===u||2===u||3===u||(4===t||2===t||3===t||(8!==u||8!==t&&9!==t&&11!==t&&12!==t)&&((11!==u&&9!==u||9!==t&&10!==t)&&((12!==u&&10!==u||10!==t)&&(5!==t&&13!==t&&(7!==t&&(1!==u&&((13!==u||14!==t)&&(6!==u||6!==t)))))))))}class tu{static getInstance(){return tu._INSTANCE||(tu._INSTANCE=new tu),tu._INSTANCE}constructor(){this._data=JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}getGraphemeBreakType(u){if(u<32)return 10===u?3:13===u?2:4;if(u<127)return 0;const t=this._data,e=t.length/3;let D=1;for(;D<=e;)if(u<t[3*D])D*=2;else{if(!(u>t[3*D+1]))return t[3*D+2];D=2*D+1}return 0}}function eu(u,t){if(0===u)return 0;const e=function(u,t){const e=new R(t,u);let D=e.prevCodePoint();for(;Du(D)||65039===D||8419===D;){if(0===e.offset)return;D=e.prevCodePoint()}if(!$(D))return;let n=e.offset;if(n>0){8205===e.prevCodePoint()&&(n=e.offset)}return n}(u,t);if(void 0!==e)return e;const D=new R(t,u);return D.prevCodePoint(),D.offset}function Du(u){return 127995<=u&&u<=127999}tu._INSTANCE=null;const nu="\xa0";class ru{static getInstance(u){return D.cache.get(Array.from(u))}static getLocales(){return D._locales.value}constructor(u){this.confusableDictionary=u}isAmbiguous(u){return this.confusableDictionary.has(u)}getPrimaryConfusable(u){return this.confusableDictionary.get(u)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}D=ru,ru.ambiguousCharacterData=new r.d((()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'))),ru.cache=new n.o((u=>{function t(u){const t=new Map;for(let e=0;e<u.length;e+=2)t.set(u[e],u[e+1]);return t}function e(u,t){if(!u)return t;const e=new Map;for(const[D,n]of u)t.has(D)&&e.set(D,n);return e}const n=D.ambiguousCharacterData.value;let r,s=u.filter((u=>!u.startsWith("_")&&u in n));0===s.length&&(s=["_default"]);for(const D of s){r=e(r,t(n[D]))}const i=function(u,t){const e=new Map(u);for(const[D,n]of t)e.set(D,n);return e}(t(n._common),r);return new D(i)})),ru._locales=new r.d((()=>Object.keys(D.ambiguousCharacterData.value).filter((u=>!u.startsWith("_")))));class su{static getRawData(){return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")}static getData(){return this._data||(this._data=new Set(su.getRawData())),this._data}static isInvisibleCharacter(u){return su.getData().has(u)}static get codePoints(){return su.getData()}}su._data=void 0},26508:(u,t,e)=>{e.d(t,{h:()=>D});const D=Symbol("MicrotaskDelay")},77846:(u,t,e)=>{e.d(t,{cB:()=>h});var D=e(24939);class n{constructor(){this._value="",this._pos=0}reset(u){return this._value=u,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(u){return u.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class r{constructor(){let u=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._caseSensitive=u}reset(u){return this._value=u,this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let u=!0;for(;this._to<this._value.length;this._to++){if(46===this._value.charCodeAt(this._to)){if(!u)break;this._from++}else u=!1}return this}cmp(u){return this._caseSensitive?(0,D.lF)(u,this._value,0,u.length,this._from,this._to):(0,D.zd)(u,this._value,0,u.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class s{constructor(){let u=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._splitOnBackslash=u,this._caseSensitive=t}reset(u){this._from=0,this._to=0,this._value=u,this._valueLen=u.length;for(let t=u.length-1;t>=0;t--,this._valueLen--){const u=this._value.charCodeAt(t);if(!(47===u||this._splitOnBackslash&&92===u))break}return this.next()}hasNext(){return this._to<this._valueLen}next(){this._from=this._to;let u=!0;for(;this._to<this._valueLen;this._to++){const t=this._value.charCodeAt(this._to);if(47===t||this._splitOnBackslash&&92===t){if(!u)break;this._from++}else u=!1}return this}cmp(u){return this._caseSensitive?(0,D.lF)(u,this._value,0,u.length,this._from,this._to):(0,D.zd)(u,this._value,0,u.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class i{constructor(u,t){this._ignorePathCasing=u,this._ignoreQueryAndFragment=t,this._states=[],this._stateIdx=0}reset(u){return this._value=u,this._states=[],this._value.scheme&&this._states.push(1),this._value.authority&&this._states.push(2),this._value.path&&(this._pathIterator=new s(!1,!this._ignorePathCasing(u)),this._pathIterator.reset(u.path),this._pathIterator.value()&&this._states.push(3)),this._ignoreQueryAndFragment(u)||(this._value.query&&this._states.push(4),this._value.fragment&&this._states.push(5)),this._stateIdx=0,this}next(){return 3===this._states[this._stateIdx]&&this._pathIterator.hasNext()?this._pathIterator.next():this._stateIdx+=1,this}hasNext(){return 3===this._states[this._stateIdx]&&this._pathIterator.hasNext()||this._stateIdx<this._states.length-1}cmp(u){if(1===this._states[this._stateIdx])return(0,D.W1)(u,this._value.scheme);if(2===this._states[this._stateIdx])return(0,D.W1)(u,this._value.authority);if(3===this._states[this._stateIdx])return this._pathIterator.cmp(u);if(4===this._states[this._stateIdx])return(0,D.UD)(u,this._value.query);if(5===this._states[this._stateIdx])return(0,D.UD)(u,this._value.fragment);throw new Error}value(){if(1===this._states[this._stateIdx])return this._value.scheme;if(2===this._states[this._stateIdx])return this._value.authority;if(3===this._states[this._stateIdx])return this._pathIterator.value();if(4===this._states[this._stateIdx])return this._value.query;if(5===this._states[this._stateIdx])return this._value.fragment;throw new Error}}class o{constructor(){this.height=1}rotateLeft(){const u=this.right;return this.right=u.left,u.left=this,this.updateHeight(),u.updateHeight(),u}rotateRight(){const u=this.left;return this.left=u.right,u.right=this,this.updateHeight(),u.updateHeight(),u}updateHeight(){this.height=1+Math.max(this.heightLeft,this.heightRight)}balanceFactor(){return this.heightRight-this.heightLeft}get heightLeft(){var u,t;return null!==(t=null===(u=this.left)||void 0===u?void 0:u.height)&&void 0!==t?t:0}get heightRight(){var u,t;return null!==(t=null===(u=this.right)||void 0===u?void 0:u.height)&&void 0!==t?t:0}}class h{static forUris(){return new h(new i(arguments.length>0&&void 0!==arguments[0]?arguments[0]:()=>!1,arguments.length>1&&void 0!==arguments[1]?arguments[1]:()=>!1))}static forStrings(){return new h(new n)}static forConfigKeys(){return new h(new r)}constructor(u){this._iter=u}clear(){this._root=void 0}set(u,t){const e=this._iter.reset(u);let D;this._root||(this._root=new o,this._root.segment=e.value());const n=[];for(D=this._root;;){const u=e.cmp(D.segment);if(u>0)D.left||(D.left=new o,D.left.segment=e.value()),n.push([-1,D]),D=D.left;else if(u<0)D.right||(D.right=new o,D.right.segment=e.value()),n.push([1,D]),D=D.right;else{if(!e.hasNext())break;e.next(),D.mid||(D.mid=new o,D.mid.segment=e.value()),n.push([0,D]),D=D.mid}}const r=D.value;D.value=t,D.key=u;for(let s=n.length-1;s>=0;s--){const u=n[s][1];u.updateHeight();const t=u.balanceFactor();if(t<-1||t>1){const t=n[s][0],e=n[s+1][0];if(1===t&&1===e)n[s][1]=u.rotateLeft();else if(-1===t&&-1===e)n[s][1]=u.rotateRight();else if(1===t&&-1===e)u.right=n[s+1][1]=n[s+1][1].rotateRight(),n[s][1]=u.rotateLeft();else{if(-1!==t||1!==e)throw new Error;u.left=n[s+1][1]=n[s+1][1].rotateLeft(),n[s][1]=u.rotateRight()}if(s>0)switch(n[s-1][0]){case-1:n[s-1][1].left=n[s][1];break;case 1:n[s-1][1].right=n[s][1];break;case 0:n[s-1][1].mid=n[s][1]}else this._root=n[0][1]}}return r}get(u){var t;return null===(t=this._getNode(u))||void 0===t?void 0:t.value}_getNode(u){const t=this._iter.reset(u);let e=this._root;for(;e;){const u=t.cmp(e.segment);if(u>0)e=e.left;else if(u<0)e=e.right;else{if(!t.hasNext())break;t.next(),e=e.mid}}return e}has(u){const t=this._getNode(u);return!(void 0===(null===t||void 0===t?void 0:t.value)&&void 0===(null===t||void 0===t?void 0:t.mid))}delete(u){return this._delete(u,!1)}deleteSuperstr(u){return this._delete(u,!0)}_delete(u,t){var e;const D=this._iter.reset(u),n=[];let r=this._root;for(;r;){const u=D.cmp(r.segment);if(u>0)n.push([-1,r]),r=r.left;else if(u<0)n.push([1,r]),r=r.right;else{if(!D.hasNext())break;D.next(),n.push([0,r]),r=r.mid}}if(r){if(t?(r.left=void 0,r.mid=void 0,r.right=void 0,r.height=1):(r.key=void 0,r.value=void 0),!r.mid&&!r.value)if(r.left&&r.right){const u=this._min(r.right);if(u.key){const{key:t,value:e,segment:D}=u;this._delete(u.key,!1),r.key=t,r.value=e,r.segment=D}}else{const u=null!==(e=r.left)&&void 0!==e?e:r.right;if(n.length>0){const[t,e]=n[n.length-1];switch(t){case-1:e.left=u;break;case 0:e.mid=u;break;case 1:e.right=u}}else this._root=u}for(let u=n.length-1;u>=0;u--){const t=n[u][1];t.updateHeight();const e=t.balanceFactor();if(e>1?(t.right.balanceFactor()>=0||(t.right=t.right.rotateRight()),n[u][1]=t.rotateLeft()):e<-1&&(t.left.balanceFactor()<=0||(t.left=t.left.rotateLeft()),n[u][1]=t.rotateRight()),u>0)switch(n[u-1][0]){case-1:n[u-1][1].left=n[u][1];break;case 1:n[u-1][1].right=n[u][1];break;case 0:n[u-1][1].mid=n[u][1]}else this._root=n[0][1]}}}_min(u){for(;u.left;)u=u.left;return u}findSubstr(u){const t=this._iter.reset(u);let e,D=this._root;for(;D;){const u=t.cmp(D.segment);if(u>0)D=D.left;else if(u<0)D=D.right;else{if(!t.hasNext())break;t.next(),e=D.value||e,D=D.mid}}return D&&D.value||e}findSuperstr(u){return this._findSuperstrOrElement(u,!1)}_findSuperstrOrElement(u,t){const e=this._iter.reset(u);let D=this._root;for(;D;){const u=e.cmp(D.segment);if(u>0)D=D.left;else if(u<0)D=D.right;else{if(!e.hasNext())return D.mid?this._entries(D.mid):t?D.value:void 0;e.next(),D=D.mid}}}forEach(u){for(const[t,e]of this)u(e,t)}*[Symbol.iterator](){yield*this._entries(this._root)}_entries(u){const t=[];return this._dfsEntries(u,t),t[Symbol.iterator]()}_dfsEntries(u,t){u&&(u.left&&this._dfsEntries(u.left,t),u.value&&t.push([u.key,u.value]),u.mid&&this._dfsEntries(u.mid,t),u.right&&this._dfsEntries(u.right,t))}}},28890:(u,t,e)=>{e.d(t,{K:()=>n,s:()=>D});class D{constructor(){this.chunkCount=0,this.chunkOccurrences=new Map,this.documents=new Map}calculateScores(u,t){const e=this.computeEmbedding(u),D=new Map,n=[];for(const[r,s]of this.documents){if(t.isCancellationRequested)return[];for(const u of s.chunks){const t=this.computeSimilarityScore(u,e,D);t>0&&n.push({key:r,score:t})}}return n}static termFrequencies(u){return function(u){var t;const e=new Map;for(const D of u)e.set(D,(null!==(t=e.get(D))&&void 0!==t?t:0)+1);return e}(D.splitTerms(u))}static*splitTerms(u){const t=u=>u.toLowerCase();for(const[e]of u.matchAll(/\b(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF]){2,}\b/g)){yield t(e);const u=e.split(/(?<=[a-z])(?=[A-Z])/g);if(u.length>1)for(const e of u)e.length>2&&/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDDC0-\uDDF3\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDD4A-\uDD65\uDD6F-\uDD85\uDE80-\uDEA9\uDEB0\uDEB1\uDEC2-\uDEC4\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61\uDF80-\uDF89\uDF8B\uDF8E\uDF90-\uDFB5\uDFB7\uDFD1\uDFD3]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8\uDFC0-\uDFE0]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD80E\uD80F\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46\uDC60-\uDFFF]|\uD810[\uDC00-\uDFFA]|\uD811[\uDC00-\uDE46]|\uD818[\uDD00-\uDD1D]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDD40-\uDD6C\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDCFF-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDDD0-\uDDED\uDDF0\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0\uDFF0-\uDFFF]|\uD87B[\uDC00-\uDE5D]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF]){3,}/g.test(e)&&(yield t(e))}}updateDocuments(u){var t;for(const{key:e}of u)this.deleteDocument(e);for(const e of u){const u=[];for(const n of e.textChunks){const e=D.termFrequencies(n);for(const u of e.keys())this.chunkOccurrences.set(u,(null!==(t=this.chunkOccurrences.get(u))&&void 0!==t?t:0)+1);u.push({text:n,tf:e})}this.chunkCount+=u.length,this.documents.set(e.key,{chunks:u})}return this}deleteDocument(u){const t=this.documents.get(u);if(t){this.documents.delete(u),this.chunkCount-=t.chunks.length;for(const u of t.chunks)for(const t of u.tf.keys()){const u=this.chunkOccurrences.get(t);if("number"===typeof u){const e=u-1;e<=0?this.chunkOccurrences.delete(t):this.chunkOccurrences.set(t,e)}}}}computeSimilarityScore(u,t,e){let D=0;for(const[n,r]of Object.entries(t)){const t=u.tf.get(n);if(!t)continue;let s=e.get(n);"number"!==typeof s&&(s=this.computeIdf(n),e.set(n,s));D+=t*s*r}return D}computeEmbedding(u){const t=D.termFrequencies(u);return this.computeTfidf(t)}computeIdf(u){var t;const e=null!==(t=this.chunkOccurrences.get(u))&&void 0!==t?t:0;return e>0?Math.log((this.chunkCount+1)/e):0}computeTfidf(u){const t=Object.create(null);for(const[e,D]of u){const u=this.computeIdf(e);u>0&&(t[e]=D*u)}return t}}function n(u){var t,e;const D=u.slice(0);D.sort(((u,t)=>t.score-u.score));const n=null!==(e=null===(t=D[0])||void 0===t?void 0:t.score)&&void 0!==e?e:0;if(n>0)for(const r of D)r.score/=n;return D}},81490:(u,t,e)=>{e.d(t,{L:()=>n});var D,n,r=e(5829);!function(u){u.isThemeColor=function(u){return u&&"object"===typeof u&&"string"===typeof u.id}}(D||(D={})),function(u){u.iconNameSegment="[A-Za-z0-9]+",u.iconNameExpression="[A-Za-z0-9-]+",u.iconModifierExpression="~[A-Za-z]+",u.iconNameCharacter="[A-Za-z0-9~-]";const t=new RegExp("^(".concat(u.iconNameExpression,")(").concat(u.iconModifierExpression,")?$"));function e(u){const D=t.exec(u.id);if(!D)return e(r.W.error);const[,n,s]=D,i=["codicon","codicon-"+n];return s&&i.push("codicon-modifier-"+s.substring(1)),i}u.asClassNameArray=e,u.asClassName=function(u){return e(u).join(" ")},u.asCSSSelector=function(u){return"."+e(u).join(".")},u.isThemeIcon=function(u){return u&&"object"===typeof u&&"string"===typeof u.id&&("undefined"===typeof u.color||D.isThemeColor(u.color))};const n=new RegExp("^\\$\\((".concat(u.iconNameExpression,"(?:").concat(u.iconModifierExpression,")?)\\)$"));u.fromString=function(u){const t=n.exec(u);if(!t)return;const[,e]=t;return{id:e}},u.fromId=function(u){return{id:u}},u.modify=function(u,t){let e=u.id;const D=e.lastIndexOf("~");return-1!==D&&(e=e.substring(0,D)),t&&(e="".concat(e,"~").concat(t)),{id:e}},u.getModifier=function(u){const t=u.id.lastIndexOf("~");if(-1!==t)return u.id.substring(t+1)},u.isEqual=function(u,t){var e,D;return u.id===t.id&&(null===(e=u.color)||void 0===e?void 0:e.id)===(null===(D=t.color)||void 0===D?void 0:D.id)}}(n||(n={}))},24796:(u,t,e)=>{function D(u){return"string"===typeof u}function n(u){return"object"===typeof u&&null!==u&&!Array.isArray(u)&&!(u instanceof RegExp)&&!(u instanceof Date)}function r(u){const t=Object.getPrototypeOf(Uint8Array);return"object"===typeof u&&u instanceof t}function s(u){return"number"===typeof u&&!isNaN(u)}function i(u){return!!u&&"function"===typeof u[Symbol.iterator]}function o(u){return!0===u||!1===u}function h(u){return"undefined"===typeof u}function a(u){return!c(u)}function c(u){return h(u)||null===u}function l(u,t){if(!u)throw new Error(t?"Unexpected type, expected '".concat(t,"'"):"Unexpected type")}function F(u){if(c(u))throw new Error("Assertion Failed: argument is undefined or null");return u}function C(u){return"function"===typeof u}function A(u,t){const e=Math.min(u.length,t.length);for(let D=0;D<e;D++)d(u[D],t[D])}function d(u,t){if(D(t)){if(typeof u!==t)throw new Error("argument does not match constraint: typeof ".concat(t))}else if(C(t)){try{if(u instanceof t)return}catch(e){}if(!c(u)&&u.constructor===t)return;if(1===t.length&&!0===t.call(void 0,u))return;throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true")}}e.d(t,{Et:()=>s,Gv:()=>n,Kg:()=>D,Lm:()=>o,O9:()=>a,Tn:()=>C,b0:()=>h,eU:()=>F,iu:()=>r,j:()=>l,jx:()=>A,xZ:()=>i,z:()=>c})},62541:(u,t,e)=>{function D(u){return u<0?0:u>255?255:0|u}function n(u){return u<0?0:u>4294967295?4294967295:0|u}e.d(t,{W:()=>D,j:()=>n})},45375:(u,t,e)=>{e.d(t,{I:()=>f,r:()=>c});var D=e(10558),n=e(23478);const r=/^\w[\w\d+.-]*$/,s=/^\//,i=/^\/\//;const o="",h="/",a=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class c{static isUri(u){return u instanceof c||!!u&&("string"===typeof u.authority&&"string"===typeof u.fragment&&"string"===typeof u.path&&"string"===typeof u.query&&"string"===typeof u.scheme&&"string"===typeof u.fsPath&&"function"===typeof u.with&&"function"===typeof u.toString)}constructor(u,t,e,D,n){let a=arguments.length>5&&void 0!==arguments[5]&&arguments[5];"object"===typeof u?(this.scheme=u.scheme||o,this.authority=u.authority||o,this.path=u.path||o,this.query=u.query||o,this.fragment=u.fragment||o):(this.scheme=function(u,t){return u||t?u:"file"}(u,a),this.authority=t||o,this.path=function(u,t){switch(u){case"https":case"http":case"file":t?t[0]!==h&&(t=h+t):t=h}return t}(this.scheme,e||o),this.query=D||o,this.fragment=n||o,function(u,t){if(!u.scheme&&t)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'.concat(u.authority,'", path: "').concat(u.path,'", query: "').concat(u.query,'", fragment: "').concat(u.fragment,'"}'));if(u.scheme&&!r.test(u.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(u.path)if(u.authority){if(!s.test(u.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(i.test(u.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}(this,a))}get fsPath(){return f(this,!1)}with(u){if(!u)return this;let{scheme:t,authority:e,path:D,query:n,fragment:r}=u;return void 0===t?t=this.scheme:null===t&&(t=o),void 0===e?e=this.authority:null===e&&(e=o),void 0===D?D=this.path:null===D&&(D=o),void 0===n?n=this.query:null===n&&(n=o),void 0===r?r=this.fragment:null===r&&(r=o),t===this.scheme&&e===this.authority&&D===this.path&&n===this.query&&r===this.fragment?this:new F(t,e,D,n,r)}static parse(u){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const e=a.exec(u);return e?new F(e[2]||o,p(e[4]||o),p(e[5]||o),p(e[7]||o),p(e[9]||o),t):new F(o,o,o,o,o)}static file(u){let t=o;if(n.uF&&(u=u.replace(/\\/g,h)),u[0]===h&&u[1]===h){const e=u.indexOf(h,2);-1===e?(t=u.substring(2),u=h):(t=u.substring(2,e),u=u.substring(e)||h)}return new F("file",t,u,o,o)}static from(u,t){return new F(u.scheme,u.authority,u.path,u.query,u.fragment,t)}static joinPath(u){if(!u.path)throw new Error("[UriError]: cannot call joinPath on URI without path");let t;for(var e=arguments.length,r=new Array(e>1?e-1:0),s=1;s<e;s++)r[s-1]=arguments[s];return t=n.uF&&"file"===u.scheme?c.file(D.IN.join(f(u,!0),...r)).path:D.SA.join(u.path,...r),u.with({path:t})}toString(){return E(this,arguments.length>0&&void 0!==arguments[0]&&arguments[0])}toJSON(){return this}static revive(u){var t,e;if(u){if(u instanceof c)return u;{const D=new F(u);return D._formatted=null!==(t=u.external)&&void 0!==t?t:null,D._fsPath=u._sep===l&&null!==(e=u.fsPath)&&void 0!==e?e:null,D}}return u}}const l=n.uF?1:void 0;class F extends c{constructor(){super(...arguments),this._formatted=null,this._fsPath=null}get fsPath(){return this._fsPath||(this._fsPath=f(this,!1)),this._fsPath}toString(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?E(this,!0):(this._formatted||(this._formatted=E(this,!1)),this._formatted)}toJSON(){const u={$mid:1};return this._fsPath&&(u.fsPath=this._fsPath,u._sep=l),this._formatted&&(u.external=this._formatted),this.path&&(u.path=this.path),this.scheme&&(u.scheme=this.scheme),this.authority&&(u.authority=this.authority),this.query&&(u.query=this.query),this.fragment&&(u.fragment=this.fragment),u}}const C={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function A(u,t,e){let D,n=-1;for(let r=0;r<u.length;r++){const s=u.charCodeAt(r);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||t&&47===s||e&&91===s||e&&93===s||e&&58===s)-1!==n&&(D+=encodeURIComponent(u.substring(n,r)),n=-1),void 0!==D&&(D+=u.charAt(r));else{void 0===D&&(D=u.substr(0,r));const t=C[s];void 0!==t?(-1!==n&&(D+=encodeURIComponent(u.substring(n,r)),n=-1),D+=t):-1===n&&(n=r)}}return-1!==n&&(D+=encodeURIComponent(u.substring(n))),void 0!==D?D:u}function d(u){let t;for(let e=0;e<u.length;e++){const D=u.charCodeAt(e);35===D||63===D?(void 0===t&&(t=u.substr(0,e)),t+=C[D]):void 0!==t&&(t+=u[e])}return void 0!==t?t:u}function f(u,t){let e;return e=u.authority&&u.path.length>1&&"file"===u.scheme?"//".concat(u.authority).concat(u.path):47===u.path.charCodeAt(0)&&(u.path.charCodeAt(1)>=65&&u.path.charCodeAt(1)<=90||u.path.charCodeAt(1)>=97&&u.path.charCodeAt(1)<=122)&&58===u.path.charCodeAt(2)?t?u.path.substr(1):u.path[1].toLowerCase()+u.path.substr(2):u.path,n.uF&&(e=e.replace(/\//g,"\\")),e}function E(u,t){const e=t?d:A;let D="",{scheme:n,authority:r,path:s,query:i,fragment:o}=u;if(n&&(D+=n,D+=":"),(r||"file"===n)&&(D+=h,D+=h),r){let u=r.indexOf("@");if(-1!==u){const t=r.substr(0,u);r=r.substr(u+1),u=t.lastIndexOf(":"),-1===u?D+=e(t,!1,!1):(D+=e(t.substr(0,u),!1,!1),D+=":",D+=e(t.substr(u+1),!1,!0)),D+="@"}r=r.toLowerCase(),u=r.lastIndexOf(":"),-1===u?D+=e(r,!1,!0):(D+=e(r.substr(0,u),!1,!0),D+=r.substr(u))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const u=s.charCodeAt(1);u>=65&&u<=90&&(s="/".concat(String.fromCharCode(u+32),":").concat(s.substr(3)))}else if(s.length>=2&&58===s.charCodeAt(1)){const u=s.charCodeAt(0);u>=65&&u<=90&&(s="".concat(String.fromCharCode(u+32),":").concat(s.substr(2)))}D+=e(s,!0,!1)}return i&&(D+="?",D+=e(i,!1,!1)),o&&(D+="#",D+=t?o:A(o,!1,!1)),D}function g(u){try{return decodeURIComponent(u)}catch(t){return u.length>3?u.substr(0,3)+g(u.substr(3)):u}}const B=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function p(u){return u.match(B)?u.replace(B,(u=>g(u))):u}},98306:(u,t,e)=>{e.d(t,{b:()=>D});const D=function(){if("object"===typeof crypto&&"function"===typeof crypto.randomUUID)return crypto.randomUUID.bind(crypto);let u;u="object"===typeof crypto&&"function"===typeof crypto.getRandomValues?crypto.getRandomValues.bind(crypto):function(u){for(let t=0;t<u.length;t++)u[t]=Math.floor(256*Math.random());return u};const t=new Uint8Array(16),e=[];for(let D=0;D<256;D++)e.push(D.toString(16).padStart(2,"0"));return function(){u(t),t[6]=15&t[6]|64,t[8]=63&t[8]|128;let D=0,n="";return n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n+="-",n+=e[t[D++]],n+=e[t[D++]],n+="-",n+=e[t[D++]],n+=e[t[D++]],n+="-",n+=e[t[D++]],n+=e[t[D++]],n+="-",n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n+=e[t[D++]],n}}()}}]);
//# sourceMappingURL=monaco-editor-vendor.e289b99f.821284a6.js.map